{"version":3,"sources":["webpack:///./src/pages/iac/setup-environment/index.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","PageDescription","AnchorLinks","AnchorLink","InlineNotification","Tabs","Tab","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","small","parentName","label","kind","isMDXComponent"],"mappings":"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","file":"component---src-pages-iac-setup-environment-index-mdx-586e23711c0ceb1c69a5.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/johandry/Workspace/ibm/att-cloudnative/ibmcloud-pattern-guide/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst Tabs = makeShortcode(\"Tabs\");\nconst Tab = makeShortcode(\"Tab\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`Instructions to setup your environment to use Terraform for IBM Cloud`}</p>\n    </PageDescription>\n    <p>{`The first step before you start working with Infrastructure as Code or Terraform is to setup your environment. We will install terraform, then set it up for IBM Cloud and make sure it works with IBM Cloud.`}</p>\n    <AnchorLinks small mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">Install IBM Cloud CLI</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Install Terraform</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Configure access to IBM Cloud</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Testing access to IBM Cloud</AnchorLink>\n    </AnchorLinks>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <h6>{`Requirements`}</h6>\n      <p>{`To be able to execute and complete the instructions in this page, make sure you have an `}<strong parentName=\"p\">{`IBM Cloud account`}</strong>{`: if you donâ€™t have one yet, you can `}<a parentName=\"p\" {...{\n          \"href\": \"https://cloud.ibm.com/docs/overview?topic=overview-quickstart_lite#prereqs-lite\"\n        }}>{`create a Lite account`}</a>{` for free.`}</p>\n    </InlineNotification>\n    <h2>{`Install IBM Cloud CLI`}</h2>\n    <p>{`If you already have installed and setup the IBM Cloud CLI you may skip this section and go straight to install infrastructure `}<a parentName=\"p\" {...{\n        \"href\": \"#ibm-cloud-cli-plugins\"\n      }}>{`IBM Cloud CLI Plugins`}</a>{`.`}</p>\n    <p>{`In this pattern you will see `}<inlineCode parentName=\"p\">{`ibmcloud`}</inlineCode>{` CLI in most of the examples and instructions. This table provides simplified instructions to install `}<inlineCode parentName=\"p\">{`ibmcloud`}</inlineCode>{` CLI on different platforms, for more details, see the `}<a parentName=\"p\" {...{\n        \"href\": \"https://cloud.ibm.com/docs/cli?topic=cloud-cli-install-ibmcloud-cli\"\n      }}>{`cli installation instructions`}</a>{`.`}</p>\n    <Tabs mdxType=\"Tabs\">\n      <Tab label=\"Linux\" mdxType=\"Tab\">\n        <p>{`The following one-liner script works on Linux to install the latest version of `}<inlineCode parentName=\"p\">{`ibmcloud`}</inlineCode>{`:`}</p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`curl -fsSL https://clis.cloud.ibm.com/install/linux | sh\n`}</code></pre>\n        <p>{`Or, you can download the latest version of the Installer for Linux from the `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/IBM-Cloud/ibm-cloud-cli-release/releases/\"\n          }}>{`IBM Cloud CLI Releases`}</a>{` page, extract the package and run the `}<inlineCode parentName=\"p\">{`install`}</inlineCode>{` script.`}</p>\n      </Tab>\n      <Tab label=\"Mac OS X\" mdxType=\"Tab\">\n        <p>{`If you have `}<a parentName=\"p\" {...{\n            \"href\": \"https://brew.sh\"\n          }}>{`brew`}</a>{` installed, you can install terraform executing the following command.`}</p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`brew cask install ibm-cloud-cli\n`}</code></pre>\n        <p>{`Then add one of the following lines to `}<inlineCode parentName=\"p\">{`~/.zshrc`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`~/.bashrc`}</inlineCode>{` respectively (more about autocomplete `}<a parentName=\"p\" {...{\n            \"href\": \"https://cloud.ibm.com/docs/cli?topic=cloud-cli-shell-autocomplete\"\n          }}>{`here`}</a>{`):`}</p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`source /usr/local/ibmcloud/autocomplete/zsh_autocomplete\nsource /usr/local/ibmcloud/autocomplete/bash_autocomplete\n`}</code></pre>\n        <p>{`If `}<inlineCode parentName=\"p\">{`brew`}</inlineCode>{` is not installed then execute the following command:`}</p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`curl -fsSL https://clis.cloud.ibm.com/install/osx | sh\n`}</code></pre>\n        <p>{`Or, download the latest version of the Installer for Mac OS X from the `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/IBM-Cloud/ibm-cloud-cli-release/releases/\"\n          }}>{`IBM Cloud CLI Releases`}</a>{` page, execute it and follow the instructions.`}</p>\n      </Tab>\n      <Tab label=\"Windows\" mdxType=\"Tab\">\n        <p>{`Download the latest version of the Installer for Windows from the `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/IBM-Cloud/ibm-cloud-cli-release/releases/\"\n          }}>{`IBM Cloud CLI Releases`}</a>{` page, execute it and follow the instructions.`}</p>\n        <p>{`Or, if you prefer to install with PowerShell, execute the following command:`}</p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-powershell\"\n          }}>{`iex(New-Object Net.WebClient).DownloadString('https://clis.cloud.ibm.com/install/powershell')\n`}</code></pre>\n      </Tab>\n    </Tabs>\n    <p>{`Verify `}<inlineCode parentName=\"p\">{`ibmcloud`}</inlineCode>{` was correctly installed by executing: `}<inlineCode parentName=\"p\">{`ibmcloud version`}</inlineCode>{`, you should see something like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ ibmcloud version\nibmcloud version 1.0.0+908f90a-2020-03-30T10:19:41+00:00\n`}</code></pre>\n    <h3>{`IBM Cloud CLI Plugins`}</h3>\n    <p>{`The next steps is to install all the required plugins, for Infrastructure as Code youâ€™ll need the `}<inlineCode parentName=\"p\">{`vpc-infrastructure`}</inlineCode>{` (aka `}<inlineCode parentName=\"p\">{`infrastructure-service`}</inlineCode>{`) and the `}<inlineCode parentName=\"p\">{`schematics`}</inlineCode>{` plugins, to install them execute the following command:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`ibmcloud plugin install -f -r \"IBM Cloud\" infrastructure-service\nibmcloud plugin install -f -r \"IBM Cloud\" schematics\n`}</code></pre>\n    <p>{`To list all the available plugins use the command:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`ibmcloud plugin repo-plugins\n`}</code></pre>\n    <p>{`When a plugin version is out-of-date, you will see a reminder the first time you use that plugin in a cli session. To update plugins, you can use the following command to list available updates and select the ones to install:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`ibmcloud plugin update\n`}</code></pre>\n    <h3>{`Login to IBM Cloud`}</h3>\n    <p>{`Log in to IBM Cloud with the `}<inlineCode parentName=\"p\">{`login`}</inlineCode>{` sub-command. You may need to use the parameter `}<inlineCode parentName=\"p\">{`-r`}</inlineCode>{` to select a region (i.e. `}<inlineCode parentName=\"p\">{`us-south`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`eu-gb`}</inlineCode>{`), `}<inlineCode parentName=\"p\">{`-g`}</inlineCode>{` to select a resource group (i.e. `}<inlineCode parentName=\"p\">{`Default`}</inlineCode>{`), `}<inlineCode parentName=\"p\">{`-c`}</inlineCode>{` to select an account ID and `}<inlineCode parentName=\"p\">{`--sso`}</inlineCode>{` to request a one-time password if your IBMid is federated with another identity provider. When not using `}<inlineCode parentName=\"p\">{`--sso`}</inlineCode>{`, the command will interactively prompt for user name and password. Although these can be specified with the `}<inlineCode parentName=\"p\">{`-u`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`-p`}</inlineCode>{` parameters, for security reasons, itâ€™s not recommended to do so.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`ibmcloud login -r us-south -g Default --sso\n`}</code></pre>\n    <p>{`You donâ€™t have to select the region or the resource group at login, these can be set at any time in the cli. After login (with or without resource group), to list all the available resource groups use the `}<inlineCode parentName=\"p\">{`resource groups`}</inlineCode>{` sub-command then use the `}<inlineCode parentName=\"p\">{`target`}</inlineCode>{` sub-command to select it.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`ibmcloud resource groups\nibmcloud target -g RESOURCE_GROUP_NAME\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`target`}</inlineCode>{` sub-command can be used also to select a new account ID or region.`}</p>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <h6><inlineCode parentName=\"h6\">{`ibmcloud`}</inlineCode>{` cheatsheet`}</h6>\n      <p>{`To know more about the IBM Cloud CLI download this `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/ibm-cloud-docs/cli/raw/master/IBM%20Cloud%20CLI%20quick%20reference.pdf\"\n        }}>{`quick reference`}</a>{` sheet. Also check the `}<a parentName=\"p\" {...{\n          \"href\": \"https://cloud.ibm.com/docs/cli?topic=cloud-cli-getting-started\"\n        }}>{`IBM Cloud CLI documentation`}</a>{`.`}</p>\n    </InlineNotification>\n    <h2>{`Install Terraform`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"http://terraform.io/\"\n      }}>{`Terraform`}</a>{` is Open Source software developed by `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.hashicorp.com/\"\n      }}>{`HashiCorp`}</a>{` to describe infrastructure as a code. Terraform allows you to build, change, and do versioning of the infrastructure safely and efficiently on multiple platforms and clouds. You can use Terraform to automate your IBM Cloud resource provisioning, rapidly build complex, multi-tier cloud environments, and implement Infrastructure as Code (IaC).`}</p>\n    <p>{`Terraform is distributed as a single binary for different platforms and architectures. To install Terraform follow the instructions below to install it from Terraform downloads or from the command prompt from your platform.`}</p>\n    <Tabs mdxType=\"Tabs\">\n      <Tab label=\"Manual installation\" mdxType=\"Tab\">\n        <p>{`Download the latest version for your operative system from the `}<a parentName=\"p\" {...{\n            \"href\": \"https://www.terraform.io/downloads.html\"\n          }}>{`Download Terraform`}</a>{` page, then unzip it and move it to a directory included in your systemâ€™s PATH environment variable.`}</p>\n      </Tab>\n      <Tab label=\"Linux\" mdxType=\"Tab\">\n        <p>{`The following one-liner script works on Linux and Mac OS X to install Terraform `}<strong parentName=\"p\">{`v0.12.24`}</strong>{` for `}<strong parentName=\"p\">{`amd64`}</strong>{` architecture.`}</p>\n        <p>{`Update the version number to the latest one and move the downloaded `}<inlineCode parentName=\"p\">{`terraform`}</inlineCode>{` binary to one of the directories listed in the `}<inlineCode parentName=\"p\">{`$PATH`}</inlineCode>{` environment variable.`}</p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`curl -SL \"https://releases.hashicorp.com/terraform/0.12.24/terraform_0.12.24_$(uname | tr '[:upper:]' '[:lower:]')_amd64.zip\" | \\\\\ntar -xf - && \\\\\nchmod +x terraform\n`}</code></pre>\n      </Tab>\n      <Tab label=\"Mac OS X\" mdxType=\"Tab\">\n        <p>{`If you have `}<a parentName=\"p\" {...{\n            \"href\": \"https://brew.sh\"\n          }}>{`brew`}</a>{` installed, you can install terraform executing the following command.`}</p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`brew install terraform\n`}</code></pre>\n        <p>{`If not, you can follow the same instructions for Linux.`}</p>\n      </Tab>\n      <Tab label=\"Windows\" mdxType=\"Tab\">\n        <p>{`If you have `}<a parentName=\"p\" {...{\n            \"href\": \"https://chocolatey.org/\"\n          }}>{`Chocolatey`}</a>{` installed, you can install terraform executing the following command.`}</p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`choco install terraform\n`}</code></pre>\n        <p>{`If not, download from the Terraform downloads page and install manually.`}</p>\n      </Tab>\n    </Tabs>\n    <p>{`Verify terraform is correctly installed by executing: `}<inlineCode parentName=\"p\">{`terraform version`}</inlineCode>{`, you should see something like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ terraform version\nTerraform v0.12.24\n`}</code></pre>\n    <h2>{`Configure access to IBM Cloud`}</h2>\n    <p>{`With Terraform you can create, manage and update almost any infrastructure resource such as virtual servers, virtual routers, load balancers, containers, kubernetes clusters, and more. All these infrastructure components are represented as a `}<strong parentName=\"p\">{`resource`}</strong>{` in Terraform. All these resources are defined in a `}<strong parentName=\"p\">{`Terraform provider`}</strong>{` which is responsible to interact and expose the resources using the cloud service API.`}</p>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <h6>{`Where can I find an overview of available resources?`}</h6>\n      <p>{`To find a full list of IBM Cloud resources that you can provision with the IBM Cloud Provider plug-in, see the `}<a parentName=\"p\" {...{\n          \"href\": \"https://cloud.ibm.com/docs/terraform?topic=terraform-index-of-terraform-resources-and-data-sources\"\n        }}>{`IBM Cloud Provider reference`}</a>{`.`}</p>\n    </InlineNotification>\n    <p>{`In order for Terraform to interact with IBM Cloud, it requires the IBM Cloud Provider. To install the IBM Cloud Provider just download the binary to the directory `}<inlineCode parentName=\"p\">{`~/.terraform.d/plugins`}</inlineCode>{`. Download the latest version from `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/IBM-Cloud/terraform-provider-ibm/releases\"\n      }}>{`https://github.com/IBM-Cloud/terraform-provider-ibm/releases`}</a>{`, or execute the following simple script on Linux or Mac OS X, make sure to update the version number (i.e. `}<inlineCode parentName=\"p\">{`v1.3.0`}</inlineCode>{`) to the latest one.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`mkdir -p ~/.terraform.d/plugins\ncurl -SL \"https://github.com/IBM-Cloud/terraform-provider-ibm/releases/download/v1.3.0/$(uname | tr '[:upper:]' '[:lower:]')_amd64.zip\" | \\\\\ntar -xf - -C ~/.terraform.d/plugins\nchmod +x ~/.terraform.d/plugins/terraform-provider-ibm_*\n`}</code></pre>\n    <p>{`Now we need to setup the IBM Cloud credentials on the system to let the IBM Cloud provider to talk the IBM Cloud REST API.`}</p>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <h6>{`What credentials do I need?`}</h6>\n      <p>{`The credentials that you need depend on the type of resource that you want to provision. For example, to provision classic infrastructure resources, you must provide your IBM Cloud classic infrastructure user name and API key. To provision VPC infrastructure generation 2, you need an IBM Cloud API key. For more information about what credentials you need for a specific IBM Cloud resource, see `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/IBM-Cloud/terraform-provider-ibm/releases\"\n        }}>{`Retrieving required credentials for your resources`}</a>{`.`}</p>\n      <p>{`In this documentation we are going to use Gen 2 resources so weâ€™ll only work with the IBM Cloud API key.`}</p>\n    </InlineNotification>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <h6>{`Using Classic Infrastructure?`}</h6>\n      <p>{`To use the Classic Infrastructure or the VPC Infrastructure Gen 1 youâ€™ll need to include in the credentials the IAAS Classic username and API key. These can be obtained at the IBM Cloud web console. Go to `}<strong parentName=\"p\">{`Manage`}</strong>{` > `}<strong parentName=\"p\">{`Access (IAM)`}</strong>{` > `}<strong parentName=\"p\">{`Users`}</strong>{`, find and click on your user. Under the section `}<strong parentName=\"p\">{`API keys`}</strong>{` youâ€™ll find your key(s) or generate them clicking on `}<inlineCode parentName=\"p\">{`Create classic infrastructure key`}</inlineCode>{` button. The `}<strong parentName=\"p\">{`username`}</strong>{` is the email address you use to login to the IBM Cloud console.`}</p>\n      <p>{`When you have the IAAS Classic username and API key, export them with the environment variables `}<inlineCode parentName=\"p\">{`IAAS_CLASSIC_USERNAME`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`IAAS_CLASSIC_API_KEY`}</inlineCode>{` respectively.`}</p>\n    </InlineNotification>\n    <p>{`If you havenâ€™t logged in yet, follow the steps from `}<a parentName=\"p\" {...{\n        \"href\": \"#login-to-ibm-cloud\"\n      }}>{`login`}</a>{` to IBM Cloud or just execute `}<inlineCode parentName=\"p\">{`ibmcloud login`}</inlineCode>{` and target a resource group.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`ibmcloud login --sso\nibmcloud resource groups\nibmcloud target -g RESOURCE_GROUP_NAME\n`}</code></pre>\n    <p>{`Create an API Key on the IBM Cloud web console following these `}<a parentName=\"p\" {...{\n        \"href\": \"https://cloud.ibm.com/docs/iam?topic=iam-userapikey#create_user_key\"\n      }}>{`instructions`}</a>{` or simply using the `}<inlineCode parentName=\"p\">{`ibmcloud`}</inlineCode>{` command, like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`ibmcloud iam api-key-create TerraformKey -d \"API Key for Terraform\" --file terraform_key.json\n`}</code></pre>\n    <p>{`If you are in a GitHub repository directory, make sure the file is not pushed or ignore it adding the filename to `}<inlineCode parentName=\"p\">{`.gitignore`}</inlineCode>{`, executing:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`echo \"terraform_key.json\" >> .gitignore\n`}</code></pre>\n    <p>{`To give Terraform and the IBM Cloud provider access to the IBM Cloud credentials, store the API key as the environment variable `}<inlineCode parentName=\"p\">{`IC_API_KEY`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`export IC_API_KEY=$(grep '\"apikey\":' terraform_key.json | sed 's/.*: \"\\\\(.*\\\\)\".*/\\\\1/')\n`}</code></pre>\n    <p>{`Or by using jq:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`export IC_API_KEY=$(jq -r .apikey terraform_key.json)\n`}</code></pre>\n    <InlineNotification kind=\"warning\" mdxType=\"InlineNotification\">\n      <h6>{`Important`}</h6>\n      <p>{`The IBM Cloud credentials can also be set in Terraform input variables.`}</p>\n      <p>{`There are different ways to set Terraform input variables, for security reasons we recommend to use environment variables (`}<inlineCode parentName=\"p\">{`TF_VAR_<variable name>`}</inlineCode>{`) but you can also store them in a variable definition (`}<inlineCode parentName=\"p\">{`.tfvar`}</inlineCode>{`) files or pass them with the `}<inlineCode parentName=\"p\">{`-var`}</inlineCode>{` command line option.`}</p>\n      <p>{`If you store the credentials in a variable definition file, i.e. `}<inlineCode parentName=\"p\">{`terraform.tfvar`}</inlineCode>{` make sure to not push the file to your github repository. Add the filename into the `}<inlineCode parentName=\"p\">{`.gitignore`}</inlineCode>{` file.`}</p>\n      <p>{`The same applies for the Key file previously created, so make sure it is also in the `}<inlineCode parentName=\"p\">{`.gitignore`}</inlineCode>{` file.`}</p>\n    </InlineNotification>\n    <h2>{`Testing access to IBM Cloud`}</h2>\n    <p>{`The Terraform code can be done with JSON format or using `}<strong parentName=\"p\">{`HashiCorp Configuration Language`}</strong>{` (HCL). During this pattern guide weâ€™ll use only HCL and we will call it HCL or Terraform Code.`}</p>\n    <p>{`A simple terraform code to verify your access could be something like the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-hcl\"\n      }}>{`provider \"ibm\" {\n  generation         = 2\n  region             = \"us-south\"\n}\n\ndata \"ibm_iam_access_group\" \"accgroup\" {\n}\n\noutput \"accgroups\" {\n  value = data.ibm_iam_access_group.accgroup.groups[*].name\n}\n`}</code></pre>\n    <p>{`Create a file `}<inlineCode parentName=\"p\">{`main.tf`}</inlineCode>{` with the above terraform code in a temporary directory, then execute:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`terraform init\nterraform apply\n`}</code></pre>\n    <p>{`The output of `}<inlineCode parentName=\"p\">{`terraform apply`}</inlineCode>{` should print any Access Groups that are visible to you in the account associated with your API key. The output should be similar to the execution of:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`ibmcloud iam access-groups\n`}</code></pre>\n    <p>{`In the following section weâ€™ll see more examples.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}