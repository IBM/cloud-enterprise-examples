{"version":3,"sources":["webpack:///./src/pages/deploy-iks/monitor-iks/index.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","PageDescription","AnchorLinks","AnchorLink","InlineNotification","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","small","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-deploy-iks-monitor-iks-index-mdx-ae76dfce98552611cab7.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/johandry/Workspace/ibm/att-cloudnative/ibmcloud-pattern-guide/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`What is ____?`}</p>\n    </PageDescription>\n    <AnchorLinks small mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">Item 1</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Item 2</AnchorLink>\n    </AnchorLinks>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <h6>{`What is this page for?`}</h6>\n      <p>{`This page has some examples of content you can use such as this notification, anchor links, page description and code. Delete all of them from this page or keep it as a sample to create your pattern.`}</p>\n      <p>{`Use this page to introduce your pattern. You may have tiles to the pages of your pattern.`}</p>\n    </InlineNotification>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`echo \"This is an example of some shell scripting code\"\necho \"just use 'bash' after the 3 back sticks\"\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-hcl\"\n      }}>{`variable \"example\" {\n  description: \"You can use other languages too, such as 'hcl' for Terraform code, 'js' for Javascript, 'go', 'python', etc...\"\n}\n`}</code></pre>\n    {\n      /*\n      This is a comment, they won't show up in the page. You can use it for TODO:, IDEA:, TBD:, etc...\n      */\n    }\n    <h2>{`Instructions`}</h2>\n    <p>{`This page is in MDX format which is Markdown with JSX, or HTML if you want to call it that way. Use an IDE (I suggest Visual Studio Code) to edit the content and install the `}<a parentName=\"p\" {...{\n        \"href\": \"https://marketplace.visualstudio.com/items?itemName=nickytonline.vscode-gatsby-snippets\"\n      }}>{`Gatsby Snippets`}</a>{` extension.`}</p>\n    <p>{`This code is made with Gastby using the Carbon theme. To know more about the components of Gastby, Carbon and Markdown refer to the following links:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://gatsby-theme-carbon.now.sh/components/Accordion\"\n        }}>{`Gatsby theme Carbon`}</a>{` Components`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.carbondesignsystem.com/components/overview\"\n        }}>{`Carbon`}</a>{` Components`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.gatsbyjs.org/tutorial/\"\n        }}>{`Gatsby`}</a>{` Tutorial & Docs`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://daringfireball.net/projects/markdown/syntax\"\n        }}>{`Markdown`}</a>{`, if you Google for `}<inlineCode parentName=\"li\">{`Markdown`}</inlineCode>{` youâ€™ll find more`}</li>\n    </ul>\n    <p>{`For every new page you create you have to:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Open `}<inlineCode parentName=\"li\">{`src/data/nav-items.yaml`}</inlineCode></li>\n      <li parentName=\"ol\">{`Locate your pattern title (i.e. `}<inlineCode parentName=\"li\">{`Infrastructure as Code`}</inlineCode>{`)`}</li>\n      <li parentName=\"ol\">{`Add a new `}<inlineCode parentName=\"li\">{`title`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`path`}</inlineCode>{` under the `}<inlineCode parentName=\"li\">{`pages`}</inlineCode>{` section`}</li>\n      <li parentName=\"ol\">{`The `}<inlineCode parentName=\"li\">{`title`}</inlineCode>{` would be something like `}<inlineCode parentName=\"li\">{`Content Overview`}</inlineCode></li>\n      <li parentName=\"ol\">{`The `}<inlineCode parentName=\"li\">{`path`}</inlineCode>{` is the relative path from `}<inlineCode parentName=\"li\">{`src/pages`}</inlineCode>{` to the new page. Example: `}<inlineCode parentName=\"li\">{`/iac/content-overview`}</inlineCode></li>\n      <li parentName=\"ol\">{`Create the directory on `}<inlineCode parentName=\"li\">{`src/pages`}</inlineCode>{` as specified in `}<inlineCode parentName=\"li\">{`path`}</inlineCode>{`. You can execute: `}<inlineCode parentName=\"li\">{`mkdir -p ./src/pages/XYZ/content-overview`}</inlineCode>{`, replace `}<inlineCode parentName=\"li\">{`XYZ`}</inlineCode>{` to your pattern dir name.`}</li>\n      <li parentName=\"ol\">{`Create the `}<inlineCode parentName=\"li\">{`index.mdx`}</inlineCode>{` page inside that directory or copy it from this one, something like this: `}<inlineCode parentName=\"li\">{`cp ./src/pages/XYZ/content-overview/index.mdx ./src/pages/XYZ/ABC/`}</inlineCode>{`, replace `}<inlineCode parentName=\"li\">{`XYZ`}</inlineCode>{` to your pattern dir name and `}<inlineCode parentName=\"li\">{`ABC`}</inlineCode>{` to your new page dir name.`}</li>\n      <li parentName=\"ol\">{`Modify the `}<inlineCode parentName=\"li\">{`title`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`description`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`keyword`}</inlineCode>{` inside the page metadata section in `}<inlineCode parentName=\"li\">{`index.mdx`}</inlineCode>{`. They are in the first 5 lines of the file.`}</li>\n      <li parentName=\"ol\">{`Modify the `}<inlineCode parentName=\"li\">{`<PageDescription>`}</inlineCode>{` section with something similar to the `}<inlineCode parentName=\"li\">{`title`}</inlineCode>{` field above.`}</li>\n      <li parentName=\"ol\">{`Update the `}<inlineCode parentName=\"li\">{`<AnchorLinks>`}</inlineCode>{` with the sub-titles in your pages. They must have the same text, otherwise the link wonâ€™t work.`}</li>\n      <li parentName=\"ol\">{`Feel free to refer to other pages in the site to reuse code, design patterns and structure`}</li>\n      <li parentName=\"ol\">{`Add a link from the overview page (this page) to the new page using a tile. Go to IaC > Overview as an example.`}</li>\n    </ol>\n    <p>{`To document a pattern, use the following guide or structure when applies:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Introduce the resource with an example`}</li>\n      <li parentName=\"ul\">{`List all or the most important input parameters`}</li>\n      <li parentName=\"ul\">{`List the most important output parameters if any or if they will be used`}</li>\n      <li parentName=\"ul\">{`Provide instructions to get the value of the input parameters, either using `}<inlineCode parentName=\"li\">{`ibmcloud`}</inlineCode>{`, API or the Web console.`}</li>\n      <li parentName=\"ul\">{`Provide instructions to execute the code either with Terraform or Schematics, if applies, needed or required.`}</li>\n    </ul>\n    <p>{`This pattern applies for IaC, it may not fit for your pattern but try to follow something similar when needed.`}</p>\n    <p>{`To document your examples, use screenshots when using the IBM Cloud Web console. If possible provide code as Infrastructure as Code using Terraform or Schematics. Go to the IaC section for multiple examples, patterns and how to setup your environment to use it.`}</p>\n    <p>{`The development workflow is as follows:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Environment Setup: (`}<em parentName=\"li\">{`only when repo is clone`}</em>{`) Execute `}<inlineCode parentName=\"li\">{`npm install`}</inlineCode>{` to download all the dependencies.`}</li>\n      <li parentName=\"ol\">{`Create a branch following this naming convention: `}<inlineCode parentName=\"li\">{`docs/OWNER/issue_NN/NAME`}</inlineCode>{` where:`}<ol parentName=\"li\">\n          <li parentName=\"ol\"><inlineCode parentName=\"li\">{`OWNER`}</inlineCode>{` would be your name or nick name to identify you, could be the GH user if itâ€™s short`}</li>\n          <li parentName=\"ol\"><inlineCode parentName=\"li\">{`NN`}</inlineCode>{` is the issue number linked to this branch or the Pull Request`}</li>\n          <li parentName=\"ol\"><inlineCode parentName=\"li\">{`NAME`}</inlineCode>{` is the name of the change, it could be the patter name or the page in the pattern`}</li>\n          <li parentName=\"ol\">{`The command to create the branch is: `}<inlineCode parentName=\"li\">{`git branch -b docs/OWNER/issue_NN/NAME`}</inlineCode></li>\n          <li parentName=\"ol\">{`Check the branch you are working on with: `}<inlineCode parentName=\"li\">{`git branch`}</inlineCode></li>\n        </ol></li>\n      <li parentName=\"ol\">{`To view your changes, execute the following command in the root of the repo `}<inlineCode parentName=\"li\">{`npm run dev`}</inlineCode>{`, when you see `}<inlineCode parentName=\"li\">{`http://localhost:8000/`}</inlineCode>{` go to that page in a browser.`}</li>\n      <li parentName=\"ol\">{`Every change you do in your code will appear immediately in the browser page, there is no need to refresh.`}</li>\n      <li parentName=\"ol\">{`When happy with the changes push the changes. `}<inlineCode parentName=\"li\">{`git add FILES`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`git commit -m 'DESCRIPTION'`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`git push`}</inlineCode></li>\n      <li parentName=\"ol\">{`Create a Pull Request in the GitHub page with this new branch (this is a one time step)`}<ol parentName=\"li\">\n          <li parentName=\"ol\"><strong parentName=\"li\">{`IMPORTANT`}</strong>{`: make sure you the base repository is `}<inlineCode parentName=\"li\">{`ibmcloud-pattern-guide`}</inlineCode>{` and NOT `}<inlineCode parentName=\"li\">{`ibm-gsi-cloud-native`}</inlineCode></li>\n        </ol></li>\n      <li parentName=\"ol\">{`If you have to do more changes go to step #5 but there is no need to repeat step #6`}</li>\n      <li parentName=\"ol\">{`When happy with the changes and ready for Peer Review, you can do one of the following options:`}<ol parentName=\"li\">\n          <li parentName=\"ol\">{`Provide instructions in the PR to checkout the branch, run Gatsby and view the changes in a browser. Ask a coworker/reviewer to follow those instructions to review your branch`}</li>\n          <li parentName=\"ol\">{`Merge the changes into `}<inlineCode parentName=\"li\">{`dev`}</inlineCode>{`, TravisCI will generate the Web pages. You can ask a coworker/reviewer to review the changes there.`}</li>\n        </ol></li>\n      <li parentName=\"ol\">{`If there are more changes to do or fix, go to step #5 (there is no need to do step #6)`}</li>\n      <li parentName=\"ol\">{`If everything is good, you can close the PR and delete the branch.`}</li>\n    </ol>\n    <p>{`When the team is ready to merge from `}<inlineCode parentName=\"p\">{`dev`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`master`}</inlineCode>{` it will be done by a team member. This could be done during or after the Sprint Review at the end of the Sprint.`}</p>\n    <p><strong parentName=\"p\">{`IMPORTANT`}</strong>{`: Make sure to delete these instructions and guides before release the page to the `}<inlineCode parentName=\"p\">{`master`}</inlineCode>{` branch. Or, comment them out.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}