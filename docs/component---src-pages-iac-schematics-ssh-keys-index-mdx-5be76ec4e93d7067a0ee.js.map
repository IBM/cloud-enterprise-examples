{"version":3,"sources":["webpack:///./src/pages/iac/schematics/ssh-keys/index.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","PageDescription","AnchorLinks","AnchorLink","InlineNotification","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","small","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-iac-schematics-ssh-keys-index-mdx-5be76ec4e93d7067a0ee.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/johandry/Workspace/ibm/att-cloudnative/ibmcloud-pattern-guide/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`Sharing SSH key between projects`}</p>\n    </PageDescription>\n    <AnchorLinks small mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">Create the SSH Key Pair</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Using the IBM Cloud CLI to create the SSH Key</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Using Terraform to create the SSH Key</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Use the created SSH key</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Clean up</AnchorLink>\n    </AnchorLinks>\n    <p>{`Terraform code in the example projects provided in this pattern creates, modifies and destroys the SSH key. However, you may want to use your own SSH key or create, modify and destroy it using a different method. Having a SSH key shared between projects is also good practice to follow. This chapter describes how to manage a SSH key outside of the example project Terraform code.`}</p>\n    <h2>{`Create the SSH Key Pair`}</h2>\n    <p>{`Before creating the SSH key in IBM Cloud you need to have a SSH key pair in your system. You can create the key pair using the `}<inlineCode parentName=\"p\">{`ssh-keygen`}</inlineCode>{` command. If you use the default parameters it generates the SSH Key Pairs in the files `}<inlineCode parentName=\"p\">{`~/.ssh/id_rsa.pub`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`~/.ssh/id_rsa`}</inlineCode>{`. Read `}<a parentName=\"p\" {...{\n        \"href\": \"https://cloud.ibm.com/docs/vpc?topic=vpc-ssh-keys\"\n      }}>{`create the SSH key pair`}</a>{` to know more about the command `}<inlineCode parentName=\"p\">{`ssh-keygen`}</inlineCode>{` and the different parameters you can use.`}</p>\n    <p>{`You can create the SSH Key on IBM Cloud on different ways, here we’ll explain two: Using the IBM Cloud CLI and using Terraform.`}</p>\n    <h2>{`Using the IBM Cloud CLI to create the SSH Key`}</h2>\n    <p>{`Make sure you have installed `}<inlineCode parentName=\"p\">{`ibmcloud`}</inlineCode>{` and the `}<inlineCode parentName=\"p\">{`infrastructure-service`}</inlineCode>{` plugin targeting it to Gen 2. Then login to your account using the `}<inlineCode parentName=\"p\">{`ibmcloud login`}</inlineCode>{` command. The `}<a parentName=\"p\" {...{\n        \"href\": \"/att-cloudnative/ibmcloud-pattern-guide/iac/setup-environment\"\n      }}>{`Setup Environment`}</a>{` page explain how to get this ready.`}</p>\n    <p>{`List the existing SSH Keys using the following command to not use one of the used key names:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`ibmcloud is keys\n`}</code></pre>\n    <p>{`To create your SSH Key execute the command `}<inlineCode parentName=\"p\">{`ibmcloud is key-create KEY_NAME (KEY | @KEY_FILE)`}</inlineCode>{`. Assuming you’ll take the public SSH key from `}<inlineCode parentName=\"p\">{`~/.ssh/id_rsa.pub`}</inlineCode>{` and name the key `}<inlineCode parentName=\"p\">{`schematics-test-key`}</inlineCode>{`, the command would be like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`ibmcloud is key-create schematics-test-key @~/.ssh/id_rsa.pub\n`}</code></pre>\n    <p>{`If something went wrong with the creation you can update the key name or delete the SSH key with the following commands respectively. The key ID `}<inlineCode parentName=\"p\">{`00000000-0000-0000-0000-000000000000`}</inlineCode>{` is fake, get the correct Key ID using the `}<inlineCode parentName=\"p\">{`ibmcloud is keys`}</inlineCode>{` command.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`ibmcloud is key-update 00000000-0000-0000-0000-000000000000 --name my-new-name\nibmcloud is key-delete 00000000-0000-0000-0000-000000000000 -f\n`}</code></pre>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <h6>{`Where can I learn more?`}</h6>\n      <p>{`Refer to the documentation the `}<a parentName=\"p\" {...{\n          \"href\": \"https://cloud.ibm.com/docs/cli?topic=vpc-infrastructure-cli-plugin-vpc-reference#keys\"\n        }}>{`Keys`}</a>{` in the VPC Infrastructure Service plugin. Or, use the CLI help with `}<inlineCode parentName=\"p\">{`ibmcloud is KEY-CMD --help`}</inlineCode>{` where `}<inlineCode parentName=\"p\">{`KEY-CMD`}</inlineCode>{` can be `}<inlineCode parentName=\"p\">{`key`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`keys`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`key-create`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`key-delete`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`key-update`}</inlineCode>{`.`}</p>\n      <p>{`Notice that some documentation refers to the command `}<inlineCode parentName=\"p\">{`ibmcloud sl security sshkey-*`}</inlineCode>{`, this document is to manage the SSH Keys for the Classic Infrastructure or Gen 1.`}</p>\n    </InlineNotification>\n    <h2>{`Using Terraform to create the SSH Key`}</h2>\n    <p>{`A pre-requisite for using Terraform is to complete the `}<a parentName=\"p\" {...{\n        \"href\": \"/att-cloudnative/ibmcloud-pattern-guide/iac/setup-environment\"\n      }}>{`environment setup`}</a>{`. For the steps below, it’s required to have Terraform installed, the IBM Cloud Provider installed and the variable `}<inlineCode parentName=\"p\">{`IC_API_KEY`}</inlineCode>{` exported with the API Key to access your IBM Cloud account.`}</p>\n    <p>{`In the `}<a parentName=\"p\" {...{\n        \"href\": \"/att-cloudnative/ibmcloud-pattern-guide/iac/getting-started-terraform\"\n      }}>{`Getting Started with Terraform`}</a>{` we made Terraform code to create a SSH Key for our simple instance. We can reuse that code. Create a directory named `}<inlineCode parentName=\"p\">{`ssh-key`}</inlineCode>{` for the following Terraform code:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`mkdir ssh-key\ncd ssh-key\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-hcl\",\n        \"metastring\": \"path=main.tf\",\n        \"path\": \"main.tf\"\n      }}>{`provider \"ibm\" {\n  generation         = 2\n  region             = \"us-south\"\n}\n\nvariable \"public_key_file\"  { default = \"~/.ssh/id_rsa.pub\" }\nlocals {\n  public_key    = file(pathexpand(var.public_key_file))\n}\n\nvariable \"ssh_key_name\" {}\n\nresource \"ibm_is_ssh_key\" \"iac_shared_ssh_key\" {\n  name       = var.ssh_key_name\n  public_key = local.public_key\n}\n\noutput \"id\" {\n  value = ibm_is_ssh_key.iac_shared_ssh_key.id\n}\noutput \"ibm_cloud_url\" {\n  value = ibm_is_ssh_key.iac_shared_ssh_key.resource_controller_url\n}\n`}</code></pre>\n    <p>{`Execute `}<inlineCode parentName=\"p\">{`terraform init`}</inlineCode>{`, then execute the following commands to create or update the key (you will be prompted for the key name because there is no default set for ssh_key_name variable in the code):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`terraform plan\nterraform apply\n`}</code></pre>\n    <p>{`To destroy the key just execute `}<inlineCode parentName=\"p\">{`terraform destroy`}</inlineCode></p>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <h6>{`Where can I know more?`}</h6>\n      <p>{`Read the web documentation for the `}<a parentName=\"p\" {...{\n          \"href\": \"https://cloud.ibm.com/docs/terraform?topic=terraform-vpc-gen2-resources#ssh-key\"\n        }}>{`ibm_is_ssh_key`}</a>{` resource of the IBM Cloud Provider.`}</p>\n    </InlineNotification>\n    <h2>{`Use the created SSH key`}</h2>\n    <p>{`To make the Terraform code in all the examples of the IaC pattern use the recently created SSH Key we need to add the following code the files `}<inlineCode parentName=\"p\">{`variables.tf`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`main.tf`}</inlineCode>{` like so:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-hcl\",\n        \"metastring\": \"path=variables.tf\",\n        \"path\": \"variables.tf\"\n      }}>{`variable \"ssh_key_name\" {}\n`}</code></pre>\n    <p>{`All the variables related to the SSH Key were replaced by just one `}<inlineCode parentName=\"p\">{`ssh_key_name`}</inlineCode>{` which is going to store the name of the recently created SSH Key.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-hcl\",\n        \"metastring\": \"path=main.tf\",\n        \"path\": \"main.tf\"\n      }}>{`data \"ibm_is_ssh_key\" \"shared_ssh_key\" {\n  name = var.ssh_key_name\n}\n\nresource \"ibm_is_instance\" \"iac_instance\" {\n  ...\n  keys = [ data.ibm_is_ssh_key.shared_ssh_key.id ]\n  ...\n}\n`}</code></pre>\n    <p>{`In the `}<inlineCode parentName=\"p\">{`main.tf`}</inlineCode>{` remove all the code to create the SSH Key and insert the data source `}<inlineCode parentName=\"p\">{`ibm_is_ssh_key`}</inlineCode>{` to get the information from the shared SSH Key. The data source requires the SSH Key name which is stored in the variable `}<inlineCode parentName=\"p\">{`ssh_key_name`}</inlineCode>{`. Also, remove any SSH key variable in the `}<inlineCode parentName=\"p\">{`variables.tf`}</inlineCode>{` file.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`ibm_is_instance.iac_instance`}</inlineCode>{` instance use a similar code to get the SSH Key ID, but instead it uses the data source `}<inlineCode parentName=\"p\">{`ibm_is_ssh_key.shared_ssh_key`}</inlineCode>{`, notice the prefix `}<inlineCode parentName=\"p\">{`data.`}</inlineCode>{`.`}</p>\n    <h2>{`Clean up`}</h2>\n    <p>{`If you’d like to destroy the shared SSH Key just need to execute the command:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`terraform destroy\n`}</code></pre>\n    <p>{`If the SSH key is being used by other resources IBM Cloud will complain and won’t let you delete the key. Make sure no resource is using the key in order to delete it.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}