{"componentChunkName":"component---src-pages-ci-cd-cloud-native-setup-argo-setup-index-mdx","path":"/ci-cd/cloud-native-setup/argo-setup/","result":{"pageContext":{"frontmatter":{"title":"ArgoCD Setup"},"relativePagePath":"/ci-cd/cloud-native-setup/argo-setup/index.mdx","titleType":"page","MdxNode":{"id":"4411cf12-a3aa-58df-818f-d87498f218f0","children":[],"parent":"abf9a17b-132c-588a-b805-95ff5466b3b2","internal":{"content":"---\ntitle: ArgoCD Setup\n---\n\nimport Globals from 'gatsby-theme-carbon/src/templates/Globals';\n\n<PageDescription>\n\nComplete the steps for setting up the ArgoCD tool to support integration with\n Artifactory as a Helm repository\n\n</PageDescription>\n\n\n<InlineNotification>\n\n**Note**: An **environment administrator** performs the steps on this page. See [Plan Installation > Roles](/admin/plan-installation#roles) for the overview of the roles involved.\n\n</InlineNotification>\n\n\n## Overview\n\nArgoCD is the [<Globals name=\"env\" />'s continuous delivery tool](/guides/continuous-delivery).\nBefore you can use it as part of the environment, it must first be configured.\n\n## Prerequisites\n\nBefore setting up ArgoCD, [set up Artifactory](/getting-started/artifactory-setup) so that ArgoCD can use it as a Helm repository.\n\n##  Configuration\n\nConfigure ArgoCD to use Artifactory as a Helm repository.\n\n### Clone the ArgoCD repository\n\nThe ArgoCD repository contains files and samples for configuring ArgoCD.\n\n- Clone the repository to your development machine\n\n  ```bash\n  git clone git@github.com:IBM/template-argocd-gitops.git\n  cd template-argocd-gitops\n  ```\n\n### Get the Helm repository location\n\nThe Helm repository is in Artifactory. ArgoCD will need the URL to that repository.\n\n- In the Artifactory console, select the Home page\n\n- In the Set Me Up section, click on the `generic-local` repository\n\n  ![Set Me Up - Repositories](setupartifactory.png \"Set Me Up: Repositories\")\n\n- In the Set Me Up dialog for the generic-local repository, copy the Deploy URL\n\n  ![Set Me Up - Generic Local Repository](artifactoryurlsetup.png \"Set Me Up: generic-local Repository\")\n\n### Update the ArgoCD configuration file\n\nThe repo you cloned contains an ArgoCD configuration file. Put the Helm repository location in that file\nand deploy it to your <Globals name=\"env\" />.\n\n- Log into your cluster from the CLI\n\n- Add the folder name for your helm artifacts to the URL copied from the\n Artifactory console\n `[artifact-helm\n-repository\n-location]/[helm artifact folder]` this is often the same name as your\n resource group\n\n- In your local copy of the `template-argocd-gitops` repo, run `./config\n/addhelmrepository.sh [artifact-helm-repository-location]/[helm artifact\n folder]`\n\n    where `[artifact-helm-repository-location]` is the URL of the Helm repository location in Artifactory\n\nVerify that the new configuration has deployed\n\n- In the Kubernetes dashboard or OpenShift console, navigate to the Config Maps in the `tools` namespace\n\n- Select the `argocd-cm` config map and confirm that its `helm.repositories` property specifies the Artifactory URL\n\n## Conclusion\n\nArgoCD now has the configuration file in the <Globals name=\"env\" /> that it needs to access the Helm chart repository in Artifactory.\n","type":"Mdx","contentDigest":"036f5dc90402dcbe7279f8a534ceda09","counter":636,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"ArgoCD Setup"},"exports":{},"rawBody":"---\ntitle: ArgoCD Setup\n---\n\nimport Globals from 'gatsby-theme-carbon/src/templates/Globals';\n\n<PageDescription>\n\nComplete the steps for setting up the ArgoCD tool to support integration with\n Artifactory as a Helm repository\n\n</PageDescription>\n\n\n<InlineNotification>\n\n**Note**: An **environment administrator** performs the steps on this page. See [Plan Installation > Roles](/admin/plan-installation#roles) for the overview of the roles involved.\n\n</InlineNotification>\n\n\n## Overview\n\nArgoCD is the [<Globals name=\"env\" />'s continuous delivery tool](/guides/continuous-delivery).\nBefore you can use it as part of the environment, it must first be configured.\n\n## Prerequisites\n\nBefore setting up ArgoCD, [set up Artifactory](/getting-started/artifactory-setup) so that ArgoCD can use it as a Helm repository.\n\n##  Configuration\n\nConfigure ArgoCD to use Artifactory as a Helm repository.\n\n### Clone the ArgoCD repository\n\nThe ArgoCD repository contains files and samples for configuring ArgoCD.\n\n- Clone the repository to your development machine\n\n  ```bash\n  git clone git@github.com:IBM/template-argocd-gitops.git\n  cd template-argocd-gitops\n  ```\n\n### Get the Helm repository location\n\nThe Helm repository is in Artifactory. ArgoCD will need the URL to that repository.\n\n- In the Artifactory console, select the Home page\n\n- In the Set Me Up section, click on the `generic-local` repository\n\n  ![Set Me Up - Repositories](setupartifactory.png \"Set Me Up: Repositories\")\n\n- In the Set Me Up dialog for the generic-local repository, copy the Deploy URL\n\n  ![Set Me Up - Generic Local Repository](artifactoryurlsetup.png \"Set Me Up: generic-local Repository\")\n\n### Update the ArgoCD configuration file\n\nThe repo you cloned contains an ArgoCD configuration file. Put the Helm repository location in that file\nand deploy it to your <Globals name=\"env\" />.\n\n- Log into your cluster from the CLI\n\n- Add the folder name for your helm artifacts to the URL copied from the\n Artifactory console\n `[artifact-helm\n-repository\n-location]/[helm artifact folder]` this is often the same name as your\n resource group\n\n- In your local copy of the `template-argocd-gitops` repo, run `./config\n/addhelmrepository.sh [artifact-helm-repository-location]/[helm artifact\n folder]`\n\n    where `[artifact-helm-repository-location]` is the URL of the Helm repository location in Artifactory\n\nVerify that the new configuration has deployed\n\n- In the Kubernetes dashboard or OpenShift console, navigate to the Config Maps in the `tools` namespace\n\n- Select the `argocd-cm` config map and confirm that its `helm.repositories` property specifies the Artifactory URL\n\n## Conclusion\n\nArgoCD now has the configuration file in the <Globals name=\"env\" /> that it needs to access the Helm chart repository in Artifactory.\n","fileAbsolutePath":"/Users/johandry/Workspace/ibm/att-cloudnative/ibmcloud-pattern-guide/src/pages/ci-cd/cloud-native-setup/argo-setup/index.mdx"}}}}