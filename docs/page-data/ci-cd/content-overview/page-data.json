{"componentChunkName":"component---src-pages-ci-cd-content-overview-index-mdx","path":"/ci-cd/content-overview/","result":{"pageContext":{"frontmatter":{"title":"CI/CD Content Overview","description":"CI/CD Content Overview","keywords":"ibm cloud cicd"},"relativePagePath":"/ci-cd/content-overview/index.mdx","titleType":"page","MdxNode":{"id":"0f81f3af-79bf-59f8-b792-d2d2e08c5b3d","children":[],"parent":"2ff10336-ab4d-5d2b-b5c2-b61444530a3d","internal":{"content":"---\ntitle: CI/CD Content Overview\ndescription: CI/CD Content Overview\nkeywords: 'ibm cloud cicd'\n---\n\nimport Globals from 'gatsby-theme-carbon/src/templates/Globals';\n\n<PageDescription>\nCI/CD Content Overview\n</PageDescription>\n\n\n\n<AnchorLinks>\n  <AnchorLink to=\"#cicd-to-vsis-using-ibm-cloud-toolchain\">CI/CD to VSIs Using IBM Cloud Toolchain</AnchorLink>\n  <AnchorLink to=\"#cicd-to-kubernetes-using-ibm-cloud-toolchains\">CI/CD to Kubernetes Using IBM Cloud Toolchains</AnchorLink>\n  <AnchorLink to=\"#cloud-native-cicd-with-kubernetes-and-openshift\">Cloud Native CI/CD with Kubernetes and OpenShift</AnchorLink>\n</AnchorLinks>\n\n\nThere are multiple options for CI and CD tooling that work with IBM Cloud.\nThere are also a number of deployment targets: VSIs vs Containers, that your CD can deploy to.\nIn this overview and the following sections, we will introduce a subset of tooling and deployment targets possible on IBM Cloud. This is not to be considered an all-inclusive list.\n\nThere are pros and cons to whether you choose to use the IBM Cloud Toolchain which is native to IBM Cloud or\nwhether you decide to go with all open-source tools to build out CI/CD capabilities that are fully supported on IBM Cloud.\n\n(Slide here)\n\n## What we hope to address for each option\n- IaC CI/CD test automation                                                               \n- IaC CI/CD source code control                                                         \n- IaC CI/CD Pipelines across account boundaries                             \n- IaC CI/CD for multiple SDLC stages     \n\n## CI/CD to VSIs Using IBM Cloud Toolchain\n\nComing soon.\n\n\n## CI/CD to Kubernetes Using IBM Cloud Toolchains\n\n---\n\n## Cloud Native CI/CD with Kubernetes and OpenShift\n\nAn Overview of what DevSecOps is, and how it can help you\n speed up you cloud native solution delivery\n\n\nOne of the patterns emerging with development teams is the ability to use [CNCF Tools](https://landscape.cncf.io/) as part of a more open multi cloud CI/CD strategy. This approach is aligning around the Kubernetes platform. The IBM Cloud supports both upstream Kubernetes for advanced cutting edge workloads and Red Hat OpenShift the proven mutli cloud distribution of Kubernetes that can install on IBM Cloud, Azure, AWS, VMWare and on Premise and many more places. This approach removes cloud vendor lock in around CI/CD tools and enables development teams to be more flexible and the target cloud they focus on deploying and developing with.\n\nThere are two patterns from this approach:\n\n- There are a core set of Development Tools that are installed inside the Kubernetes environment with the use of Operators the management and support of these tools can be controlled with centralized operations teams\n- Integration of centralized operations tools like Source Code Management, Artifact Management, Image Management, Logging and Monitoring\n\nThis model enables agile cloud native development teams to execute quickly while also conforming to the enterprise standards required for CI/CD. This pattern also enable the reduction of costs of managing expensive centralized multi tenant CI services and enables the development teams to use a percentage of their development cluster to support CI activities. This approach with Tekton enable the centralized operations teams to impose specific pipeline tasks that need to be supported by development teams without the complex\n\n### Overview\n\nThis short video introduces the cloud native concepts of CI/CD DevOps with <Globals name=\"ocp\" />:\n<iframe width=\"80%\" height=\"500\" src=\"https://www.youtube.com/embed/GOPWObjFTsI\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n<p></p>\n\nEach Cluster can have a selection of CNCF DevSecOps tools installed using IasC(Infrastrcture As Code) using Terraform. The cluster then turns from a production state cluster into a cluster that is used for multi tenant development teams.\n\nThe following describes the requirements:\n\n- **Installation**: Install the CNCF Tools using Terraform this create a new <Globals name=\"env\" />\n- **Cluster**: A <Globals name=\"kube\" /> or <Globals name=\"ocp\" /> cluster that both hosts the tools and itself is a deployment target for application builds\n- **Software Delivery Lifecycle**: Deployment target environments that support the application development lifecycle: *dev*, *test*, and *staging*\n- **Backend services**: Cloud services commonly required by cloud-native applications for monitoring, security, and persistence\n- **CI/CD**: A prebuilt, ready-to-run continuous delivery pipeline incorporating best-of-breed open source software tools supporting `Jenkins`, `Tekton` for CI and `ArgoCD` for CD\n- **<Globals name=\"templates\" />**: Prebuilt code templates for common application components and tasks incorporating best practices that developers can add to their codebase as needed\n- **Dashboard**: Integration of the tools into the OpenShift dashboard, and a centralized developer dashboard to help developers use the environment's capabilities\n\nA core set of tools are sourced from the [IBM Cloud Catalog](https://cloud.ibm.com/catalog?search=label%3Ahelm#software) that can be found in the <Globals name=\"ic\" />. This approach helps assemble these reliable open source development tools into an end-to-end developer experience that is fully integrated with <Globals name=\"ic\" />'s managed container orchestration services.\n\nthe tools can also be source from the [Operator Hub](https://operatorhub.io/) and the [Redhat Marketplace](https://marketplace.redhat.com/en-us). The Operations team that owns the IasC can decide the best approach to install the tools either using **Helm3** or **Operators**\n\nTypically a **Cloud System Admin** installs and sets up a new <Globals name=\"env\" />, providing a place for the developers to start developing the [minimum viable product (MVP)](https://www.ibm.com/garage/method/practices/think/inception/practice_minimum_viable_product). The objective is to reduce the time required for a team to configure and prepare their development environment. The key benefit is to make the end-to-end [CI/CD development lifecycle](https://www.ibm.com/garage/method/practices/deliver/practice_continuous_delivery/) consistent across each platform and make the out-of-the-box developer experience as simple as possible.\n\nThe installation is performed using [Terraform](https://cloud.ibm.com/docs/terraform), driven by scripts with a [modular configuration](https://github.com/ibm-garage-cloud/garage-terraform-modules) so unneeded tools can be easily disabled or new tools added. The combination of tools selected are proven in the industry to deliver real value for modern cloud-native development.\n\n### Environment components\n\nAfter installation, the <Globals name=\"env\" /> consists of a set of CNCF tools installed into your nominated kubernetes cluster.\n\nThis diagram illustrates the <Globals name=\"env\" />:\n\n![Provisioned CNCF Tools](./images/cncf-tools-environment.png)\n\nThe diagram shows the components in the environment: the cluster, the deployment target environments, the cloud services, and the tools.\n\n#### Development cluster\n\nThe heart of the <Globals key=\"env\" /> is a cluster:\n\n- An [<Globals key=\"iks\" />](https://www.ibm.com/cloud/container-service)\nor [<Globals key=\"roks\" />](https://www.ibm.com/cloud/openshift) 3-node cluster\n- Cluster namespace that encapsulates the tooling installed in the cluster: *tools*\n- Cluster namespaces for deployment target environments: *dev*, *test*, and *staging*\n\nThe following IBM Cloud services are created and bound to the cluster:\n\n| Capability                | Service        |Description |\n| -----------------------   |:-------------- |------------|\n| Logging                   | [LogDNA Logging](https://cloud.ibm.com/docs/services/Log-Analysis-with-LogDNA?topic=LogDNA-getting-started)  | Manage app logging LogDNA  |\n| Monitoring                | [SysDig Monitoring](https://cloud.ibm.com/docs/services/Monitoring-with-Sysdig?topic=Sysdig-getting-started) | Manage monitoring of apps with SysDig |\n| AppID                     | [AppID Application Authentication](https://cloud.ibm.com/docs/services/appid?topic=appid-service-access-management) | Secure your apps, APIs and Kubernetes Ingress end points |\n| Cloudant                  | [Cloudant NoSQL Database](https://www.ibm.com/cloud/cloudant) | NoSQL Database commonly used for data persistence |\n| Cloud Object Storage      | [Cloud Object Storage Storage](https://cloud.ibm.com/docs/services/cloud-object-storage?topic=cloud-object-storage-getting-started) | Storage service commonly used for binary content |\n| PostreSQL                 | [PostgreSQL](https://www.ibm.com/cloud/learn/postgresql) (used by SonarQube) | SQL Database used for structure data persistence |\n\n#### Continuous delivery tools\n\nThe following best-of-breed open source software tools are installed in the cluster's *tools* namespace:\n\n| Capability                  | Tool                                         | Bitnami   |Description |\n| --------------------------- |:--------------                               | -------   |------------|\n| Continuous Integration      | [Jenkins CI](https://jenkins.io/)            |  Yes      | Jenkins is a common tool for Continuous Integration   |\n| Continuous Integration      | [Tekton CI](https://tekton.dev/)             |           | Tekton is an emerging tool for Continuous Integration with Kubernetes and OpenShift  |\n| Code Analysis               | [SonarQube](https://www.sonarqube.org/)      |  Yes      | SonarQube can scan code and display the results in a dashboard |\n| Artifact and Helm Storage   | [Artifactory](https://jfrog.com/open-source/)|  Yes      | Artifactory is an artifact storage and Helm chart repository  |\n| Continuous Deployment       | [ArgoCD](https://argoproj.github.io/argo-cd/)|           | ArgoCD support Continuous Delivery with GitOps |\n| Contract API Testing        | [Pact](https://docs.pact.io/)                |           | Pact enables API contract testing |\n| Code Ready Workspace        | [Eclipse CHE](https://developers.redhat.com/products/codeready-workspaces/overview)  |           | IDE for editing and managing code in a web browser |\n\nTo install the CNCF tools into your nominated kubernetes cluster follow the [Setup Guide](/ci-cd/cloud-native-setup).\n","type":"Mdx","contentDigest":"4c08445bf47554927232c1957023c29f","counter":632,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"CI/CD Content Overview","description":"CI/CD Content Overview","keywords":"ibm cloud cicd"},"exports":{},"rawBody":"---\ntitle: CI/CD Content Overview\ndescription: CI/CD Content Overview\nkeywords: 'ibm cloud cicd'\n---\n\nimport Globals from 'gatsby-theme-carbon/src/templates/Globals';\n\n<PageDescription>\nCI/CD Content Overview\n</PageDescription>\n\n\n\n<AnchorLinks>\n  <AnchorLink to=\"#cicd-to-vsis-using-ibm-cloud-toolchain\">CI/CD to VSIs Using IBM Cloud Toolchain</AnchorLink>\n  <AnchorLink to=\"#cicd-to-kubernetes-using-ibm-cloud-toolchains\">CI/CD to Kubernetes Using IBM Cloud Toolchains</AnchorLink>\n  <AnchorLink to=\"#cloud-native-cicd-with-kubernetes-and-openshift\">Cloud Native CI/CD with Kubernetes and OpenShift</AnchorLink>\n</AnchorLinks>\n\n\nThere are multiple options for CI and CD tooling that work with IBM Cloud.\nThere are also a number of deployment targets: VSIs vs Containers, that your CD can deploy to.\nIn this overview and the following sections, we will introduce a subset of tooling and deployment targets possible on IBM Cloud. This is not to be considered an all-inclusive list.\n\nThere are pros and cons to whether you choose to use the IBM Cloud Toolchain which is native to IBM Cloud or\nwhether you decide to go with all open-source tools to build out CI/CD capabilities that are fully supported on IBM Cloud.\n\n(Slide here)\n\n## What we hope to address for each option\n- IaC CI/CD test automation                                                               \n- IaC CI/CD source code control                                                         \n- IaC CI/CD Pipelines across account boundaries                             \n- IaC CI/CD for multiple SDLC stages     \n\n## CI/CD to VSIs Using IBM Cloud Toolchain\n\nComing soon.\n\n\n## CI/CD to Kubernetes Using IBM Cloud Toolchains\n\n---\n\n## Cloud Native CI/CD with Kubernetes and OpenShift\n\nAn Overview of what DevSecOps is, and how it can help you\n speed up you cloud native solution delivery\n\n\nOne of the patterns emerging with development teams is the ability to use [CNCF Tools](https://landscape.cncf.io/) as part of a more open multi cloud CI/CD strategy. This approach is aligning around the Kubernetes platform. The IBM Cloud supports both upstream Kubernetes for advanced cutting edge workloads and Red Hat OpenShift the proven mutli cloud distribution of Kubernetes that can install on IBM Cloud, Azure, AWS, VMWare and on Premise and many more places. This approach removes cloud vendor lock in around CI/CD tools and enables development teams to be more flexible and the target cloud they focus on deploying and developing with.\n\nThere are two patterns from this approach:\n\n- There are a core set of Development Tools that are installed inside the Kubernetes environment with the use of Operators the management and support of these tools can be controlled with centralized operations teams\n- Integration of centralized operations tools like Source Code Management, Artifact Management, Image Management, Logging and Monitoring\n\nThis model enables agile cloud native development teams to execute quickly while also conforming to the enterprise standards required for CI/CD. This pattern also enable the reduction of costs of managing expensive centralized multi tenant CI services and enables the development teams to use a percentage of their development cluster to support CI activities. This approach with Tekton enable the centralized operations teams to impose specific pipeline tasks that need to be supported by development teams without the complex\n\n### Overview\n\nThis short video introduces the cloud native concepts of CI/CD DevOps with <Globals name=\"ocp\" />:\n<iframe width=\"80%\" height=\"500\" src=\"https://www.youtube.com/embed/GOPWObjFTsI\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n<p></p>\n\nEach Cluster can have a selection of CNCF DevSecOps tools installed using IasC(Infrastrcture As Code) using Terraform. The cluster then turns from a production state cluster into a cluster that is used for multi tenant development teams.\n\nThe following describes the requirements:\n\n- **Installation**: Install the CNCF Tools using Terraform this create a new <Globals name=\"env\" />\n- **Cluster**: A <Globals name=\"kube\" /> or <Globals name=\"ocp\" /> cluster that both hosts the tools and itself is a deployment target for application builds\n- **Software Delivery Lifecycle**: Deployment target environments that support the application development lifecycle: *dev*, *test*, and *staging*\n- **Backend services**: Cloud services commonly required by cloud-native applications for monitoring, security, and persistence\n- **CI/CD**: A prebuilt, ready-to-run continuous delivery pipeline incorporating best-of-breed open source software tools supporting `Jenkins`, `Tekton` for CI and `ArgoCD` for CD\n- **<Globals name=\"templates\" />**: Prebuilt code templates for common application components and tasks incorporating best practices that developers can add to their codebase as needed\n- **Dashboard**: Integration of the tools into the OpenShift dashboard, and a centralized developer dashboard to help developers use the environment's capabilities\n\nA core set of tools are sourced from the [IBM Cloud Catalog](https://cloud.ibm.com/catalog?search=label%3Ahelm#software) that can be found in the <Globals name=\"ic\" />. This approach helps assemble these reliable open source development tools into an end-to-end developer experience that is fully integrated with <Globals name=\"ic\" />'s managed container orchestration services.\n\nthe tools can also be source from the [Operator Hub](https://operatorhub.io/) and the [Redhat Marketplace](https://marketplace.redhat.com/en-us). The Operations team that owns the IasC can decide the best approach to install the tools either using **Helm3** or **Operators**\n\nTypically a **Cloud System Admin** installs and sets up a new <Globals name=\"env\" />, providing a place for the developers to start developing the [minimum viable product (MVP)](https://www.ibm.com/garage/method/practices/think/inception/practice_minimum_viable_product). The objective is to reduce the time required for a team to configure and prepare their development environment. The key benefit is to make the end-to-end [CI/CD development lifecycle](https://www.ibm.com/garage/method/practices/deliver/practice_continuous_delivery/) consistent across each platform and make the out-of-the-box developer experience as simple as possible.\n\nThe installation is performed using [Terraform](https://cloud.ibm.com/docs/terraform), driven by scripts with a [modular configuration](https://github.com/ibm-garage-cloud/garage-terraform-modules) so unneeded tools can be easily disabled or new tools added. The combination of tools selected are proven in the industry to deliver real value for modern cloud-native development.\n\n### Environment components\n\nAfter installation, the <Globals name=\"env\" /> consists of a set of CNCF tools installed into your nominated kubernetes cluster.\n\nThis diagram illustrates the <Globals name=\"env\" />:\n\n![Provisioned CNCF Tools](./images/cncf-tools-environment.png)\n\nThe diagram shows the components in the environment: the cluster, the deployment target environments, the cloud services, and the tools.\n\n#### Development cluster\n\nThe heart of the <Globals key=\"env\" /> is a cluster:\n\n- An [<Globals key=\"iks\" />](https://www.ibm.com/cloud/container-service)\nor [<Globals key=\"roks\" />](https://www.ibm.com/cloud/openshift) 3-node cluster\n- Cluster namespace that encapsulates the tooling installed in the cluster: *tools*\n- Cluster namespaces for deployment target environments: *dev*, *test*, and *staging*\n\nThe following IBM Cloud services are created and bound to the cluster:\n\n| Capability                | Service        |Description |\n| -----------------------   |:-------------- |------------|\n| Logging                   | [LogDNA Logging](https://cloud.ibm.com/docs/services/Log-Analysis-with-LogDNA?topic=LogDNA-getting-started)  | Manage app logging LogDNA  |\n| Monitoring                | [SysDig Monitoring](https://cloud.ibm.com/docs/services/Monitoring-with-Sysdig?topic=Sysdig-getting-started) | Manage monitoring of apps with SysDig |\n| AppID                     | [AppID Application Authentication](https://cloud.ibm.com/docs/services/appid?topic=appid-service-access-management) | Secure your apps, APIs and Kubernetes Ingress end points |\n| Cloudant                  | [Cloudant NoSQL Database](https://www.ibm.com/cloud/cloudant) | NoSQL Database commonly used for data persistence |\n| Cloud Object Storage      | [Cloud Object Storage Storage](https://cloud.ibm.com/docs/services/cloud-object-storage?topic=cloud-object-storage-getting-started) | Storage service commonly used for binary content |\n| PostreSQL                 | [PostgreSQL](https://www.ibm.com/cloud/learn/postgresql) (used by SonarQube) | SQL Database used for structure data persistence |\n\n#### Continuous delivery tools\n\nThe following best-of-breed open source software tools are installed in the cluster's *tools* namespace:\n\n| Capability                  | Tool                                         | Bitnami   |Description |\n| --------------------------- |:--------------                               | -------   |------------|\n| Continuous Integration      | [Jenkins CI](https://jenkins.io/)            |  Yes      | Jenkins is a common tool for Continuous Integration   |\n| Continuous Integration      | [Tekton CI](https://tekton.dev/)             |           | Tekton is an emerging tool for Continuous Integration with Kubernetes and OpenShift  |\n| Code Analysis               | [SonarQube](https://www.sonarqube.org/)      |  Yes      | SonarQube can scan code and display the results in a dashboard |\n| Artifact and Helm Storage   | [Artifactory](https://jfrog.com/open-source/)|  Yes      | Artifactory is an artifact storage and Helm chart repository  |\n| Continuous Deployment       | [ArgoCD](https://argoproj.github.io/argo-cd/)|           | ArgoCD support Continuous Delivery with GitOps |\n| Contract API Testing        | [Pact](https://docs.pact.io/)                |           | Pact enables API contract testing |\n| Code Ready Workspace        | [Eclipse CHE](https://developers.redhat.com/products/codeready-workspaces/overview)  |           | IDE for editing and managing code in a web browser |\n\nTo install the CNCF tools into your nominated kubernetes cluster follow the [Setup Guide](/ci-cd/cloud-native-setup).\n","fileAbsolutePath":"/Users/johandry/Workspace/ibm/att-cloudnative/ibmcloud-pattern-guide/src/pages/ci-cd/content-overview/index.mdx"}}}}