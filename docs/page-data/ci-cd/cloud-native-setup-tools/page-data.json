{"componentChunkName":"component---src-pages-ci-cd-cloud-native-setup-tools-index-mdx","path":"/ci-cd/cloud-native-setup-tools/","result":{"pageContext":{"frontmatter":{"title":"Developer tools Setup"},"relativePagePath":"/ci-cd/cloud-native-setup-tools/index.mdx","titleType":"page","MdxNode":{"id":"05c90a1a-2b22-5d58-a402-84688317b33e","children":[],"parent":"1ceb1b0d-120c-5ccf-b0d1-22a908964c19","internal":{"content":"---\ntitle: Developer tools Setup\n---\n\nTo prepare to use the CNCF DevOps tools you need to prepare a development client. This can be either your desktop, the IBM Cloud Shell or when using OpenShift you can use Cloud Ready Workspaces.\n\n- If you are going to use your desktop/laptop follow\n the instructions in Desktop/Laptop tab. You will require a modern MacOS or\n  Windows 10 operating systems for he Desktop/Laptop option\n- If you cannot install tools on your desktop/laptop, follow the Cloud Shell\n instructions\n- If you want to try the full web IDE experience, then follow the Code Ready\n Workspaces setup instructions\n\nOnce you have completed these setup requirements you will be ready to\n deploy you first application with a CI/CD pipeline that supports Code scanning.\n\n<Tabs>\n\n<Tab label=\"Cloud Shell\">\n\n## Config Cloud Shell\n\nIBM Cloud Shell is instantly accessible from your IBM Cloud account â€” no other installation is needed.\n\nIBM Cloud Shell is a free service from IBM which gives you complete control of your cloud resources, applications and infrastructure, from any web browser.\n\nFeatures of IBM Cloud Shell include:\n\n- Preconfigured environment\nIBM Cloud Shell provides a curated, cloud-based workspace with dozens of preinstalled tools and programming languages. It automatically authenticates to your IBM Cloud account so you can get right to work.\n\n- File upload/download\nUtilize file upload/download functionality to import files to IBM Cloud Shell, or pull down data to your local machine.\n\n- Multiple sessions\nUse up to five shell sessions at a time to maximize your productivity. Mirror workflows on your local machine, or view logs on one session while editing a file in another\n\n### Set up Cloud Shell\n- Login to IBM Cloud console (cloud.ibm.com), if not already done\n\n- Invoke Cloud shell by clicking on the button at the top right hand corner of the browser window\n    ![Invoke Cloud Shell](./images/invokecloudshell.png)\n\n- Install igc by running the following commands on the just newly opened terminal:\n    ```bash\n    git clone https://github.com/ibm-garage-cloud/cloud-shell-commands.git\n    export PATH=~/cloud-shell-commands:$PATH\n    source ./cloud-shell-commands/install-igc\n    ```\n\n- Successful execution will look like this.\n    ```bash\n    $ git clone https://github.com/ibm-garage-cloud/cloud-shell-commands.git\n    Cloning into 'cloud-shell-commands'...\n    remote: Enumerating objects: 50, done.\n    remote: Counting objects: 100% (50/50), done.\n    remote: Compressing objects: 100% (44/44), done.\n    remote: Total 50 (delta 23), reused 14 (delta 4), pack-reused 0\n        Unpacking objects: 100% (50/50), done.\n    Checking connectivity... done.\n    $ export PATH=~/cloud-shell-commands:$PATH\n    $ source ./cloud-shell-commands/install-igc\n    npm WARN deprecated request@2.88.2: request has been deprecated, see https://github.com/request/request/issues/3142\n    /home/abalasu1/.npm/bin/kubectl-dashboard -> /home/abalasu1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-dashboard.js\n    /home/abalasu1/.npm/bin/kubectl-enable -> /home/abalasu1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-enable.js\n    /home/abalasu1/.npm/bin/kubectl-credentials -> /home/abalasu1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-credentials.js\n    /home/abalasu1/.npm/bin/igc -> /home/abalasu1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script.js\n    /home/abalasu1/.npm/bin/kubectl-endpoints -> /home/abalasu1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-endpoints.js\n    /home/abalasu1/.npm/bin/kubectl-git-secret -> /home/abalasu1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-git-secret.js\n    /home/abalasu1/.npm/bin/kubectl-igc -> /home/abalasu1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script.js\n    /home/abalasu1/.npm/bin/kubectl-pipeline -> /home/abalasu1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-pipeline.js\n    /home/abalasu1/.npm/bin/kubectl-sync -> /home/abalasu1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-namespace.js\n    /home/abalasu1/.npm/bin/kubectl-tool-config -> /home/abalasu1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-tool-config.js\n\n    > jsonpath@1.0.2 postinstall /home/abalasu1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/node_modules/jsonpath\n    > node lib/aesprim.js > generated/aesprim-browser.js\n\n    npm WARN ws@7.2.5 requires a peer of bufferutil@^4.0.1 but none is installed. You must install peer dependencies yourself.\n    npm WARN ws@7.2.5 requires a peer of utf-8-validate@^5.0.2 but none is installed. You must install peer dependencies yourself.\n\n    + @ibmgaragecloud/cloud-native-toolkit-cli@0.5.3\n    added 311 packages from 358 contributors in 50.079s\n    ```\n- Check the version of the CLI commands\n    ```bash\n    $ kubectl sync --version\n    0.5.3\n    ```\n\n</Tab>\n\n<Tab label=\"Desktop/Laptop\">\n\n## Install CLIs and tools\n\nThe following is a list of desktop tools required to help with installation and development.\n\n- [Git Client](https://git-scm.com/): Needs to be installed in your development operating system, it comes as standard for Mac OS\n\n- [IBM Cloud CLI](https://cloud.ibm.com/docs/cli?topic=cloud-cli-getting-started): Required for management of IBM Cloud Account and management of your managed IBM Kubernetes and Red Hat OpenShift clusters\n    - Don't install just the [IBM Cloud CLI](https://cloud.ibm.com/docs/cli?topic=cloud-cli-install-ibmcloud-cli), install the [IBM Cloud CLI and Developer Tools](https://cloud.ibm.com/docs/cli?topic=cloud-cli-getting-started#step1-install-idt)\n    ```\n    curl -sL https://ibm.biz/idt-installer | bash\n    ```\n    - Note: If you log in to the web UI using SSO, you'll need to [create an API key](https://cloud.ibm.com/docs/iam?topic=iam-federated_id) for logging into the CLI. (You can also use this API key for [installing the Developer Tools environment](/admin/installation-ibm-cloud).)\n\n- [OpenShift OC CLI](https://www.okd.io/download.html): Required for Red Hat OpenShift management and development\n    - Place `oc` and `kubectl` in your Terminal `PATH`\n\n    - #### MacOS/Linux\n    - Once downloaded navigate to Download folder\n    ```\n    cd ~/Downloads/openshift-origin-client-tools-v3/\n    ```\n    - Then copy `oc` and `kubectl` to the system-wide available scripts folder (which is already in your PATH)\n    ```\n    cp kubectl /usr/local/bin/kubectl\n    cp oc /usr/local/bin/oc\n    ```\n\n    <InlineNotification >\n\n     Depending on your MacOS security settings you may need to allow access to `oc` and `kubectl`, go to `System Preferences`=>`Security & Privacy` and press `Allow Anyway`*\n     ![security](security.png)\n\n    </InlineNotification>\n\n- [Docker Desktop](https://www.docker.com/products/docker-desktop): Required for running common tools and [Developer Tools Image](https://ibm-garage-cloud.github.io/ibm-garage-developer-guide/guides/tools-image)\n    - Installed and running on your local machine\n\n- [Node](https://nodejs.org/en/): Required for running the [IBM Garage for Cloud CLI](https://ibm-garage-cloud.github.io/ibm-garage-developer-guide/getting-started/cli)\n    - Installed on your local machine\n    - Recommended `v12.x LTS`\n\n- [IBM Garage for Cloud CLI](https://ibm-garage-cloud.github.io/ibm-garage-developer-guide/getting-started/cli): Used to help make working with the development tools as easy as possible\n    ```\n    npm i -g @ibmgaragecloud/cloud-native-toolkit-cli\n    ```\n\n- [Tekton CLI](https://github.com/tektoncd/cli): Used to help control Tekton\n pipelines from the command line.\n    ```\n    brew tap tektoncd/tools\n    brew install tektoncd/tools/tektoncd-cli\n  ```\n\n- [Visual Studio Code](https://code.visualstudio.com/download): A popular code editor\n    - You will be required to edit some files, having a good quality editor is always best practice\n    - Enabling [launching VSCode from a terminal](https://code.visualstudio.com/docs/setup/mac#_launching-from-the-command-line)\n\n- [JDK 11](https://www.oracle.com/technetwork/java/javase/downloads/jdk11-downloads-5066655.html): _Optional_ installed on your local machine\n    - Used for SpringBoot content\n\n</Tab>\n\n<Tab label=\"Cloud Ready Workspaces\">\n\n## Code Ready Workspace\nCodeReady Workspaces is a developer workspace server and cloud IDE. Workspaces are defined as project\ncode files and all of their dependencies necessary to edit, build, run, and debug them. Each workspace\nhas its own private IDE hosted within it. The IDE is accessible through a browser. The browser downloads\nthe IDE as a single-page web application.\nCodeReady Workspaces will enable a 100% developer experience to\nbe delivered from a users browser.\n\n Red Hat CodeReady Workspaces provides:\n - Workspaces that include runtimes and IDEs\n - RESTful workspace server\n - A browser-based IDE\n - Plugins for languages, framework, and tools\n - An SDK for creating plugins and assemblies\n\n### CRW in Workshop\nCodeReady Workspaces includes a powerful in-browser IDE with support for Microsoft Visual Studio Code\nextensions. As part of the workshop, we need only a machine capable of running a web browser through\nwhich CRW will provide an integrated environment to access the code repo, and the build environment to\ndevelop the code and then  test, and deploy on an OpenShift environment\n\n### Setting up your Workspace on CRW\n\n- Login to the Openshift Cluster through the Web console, where the Code ready workspace is setup.\n\n- Access the Code Ready Workspace through the appropriate Code ready workspace URL that would have been shared.\n**Note**:If the code ready workspace is configured through openshiftoAuth, You can access the above URL, once you have logged into the Openshift Cluster\n\n- If you are accessing it for the first time you need register as the registration page will be shown. User name can contain only these characters (0-9, a-z and hypen in between).\nEnsure you provide details regarding username, Email, First name and Last name (If SSO is not configured, you need to provide the password as well.\n\n- Navigate to  the default Code Ready Workspace link  on your browser as shown in below picture.\n\n  ![CRW](./images/CRW_HomePage.png)\n\n\n- You can create the workspace by selecting one of the template stacks as shown in Step 4. Alternatively, navigate to the Workspace and click on the \"Add Workspace\" button.\n\n  ![Adding Workspace](./images/AddWorkspace.png)\n\n\n- Provide the workspace as part of the Name field. Click on \"Remove\" button in the Projects section to remove the project template.\nBasically, we are going to create an empty project.\n\n  ![Creating Project with Empty Template](./images/CreatingNewWorkspace.png)\n\n- Click on \"Create and Open\" button to create and load the workspace. Workspace will start loading. This may take a few minutes as the Container and plug-ins related to the stack has to be created and deployed.\n\n- Once the workspace is  created and loaded, you can see a vscode editor.\n\n  ![CRWWorkspace](./images/CRWScreen.png)\n\n\n- Go to \"Terminal\" menu and select \"Open Terminal in specific container\".\n\n  ![Open Terminal](./images/OpeningTerminal.png)\n\n\n- Select the \"Developer Container\".\n\n- Install igc by running the following commands on the just newly opened terminal:\n    ```bash\n    git clone https://github.com/ibm-garage-cloud/cloud-shell-commands.git\n    export PATH=~/cloud-shell-commands:$PATH\n    source ./cloud-shell-commands/install-igc\n    ```\n    Successful installation will look something like this.\n\n    ![igc install on terminal](./images/igcInstall.png)\n\n</Tab>\n\n\n</Tabs>\n\n## Log into IBM Cloud\n\n- Use `ibmcloud` CLI command line to log into the cloud account. Replace the user_id, password and team name in the sandbox name\n    ```bash\n    ibmcloud login -u <user_id> -p <password> -g sandbox-team-n.. -r us-south\n    ```\n\n- Select Account Number that you are boarded on.\n    ```bash\n    $ ibmcloud login -u email@company.com -p XXX -g sandbox-team-one -r us-south\n    API endpoint: https://cloud.ibm.com\n    Authenticating...\n    OK\n\n    Select an account:\n    1. GSI Labs - IBM\n    Enter a number> 1\n    Targeted account GSI Labs\n\n    Targeted resource group sandbox-team-one\n\n    Targeted region us-south\n\n    API endpoint:      https://cloud.ibm.com\n    Region:            us-south\n    User:              email@company.com\n    Account:           GSI Labs\n    Resource group:    sandbox-team-one\n    CF API endpoint:\n    Org:\n    Space:\n\n    ```\n\n## Log into OpenShift Cluster\n\n- Log into the openshift cluster from the cloud console\n    ![Openshift](./images/openshiftcluster.png)\n\n- Access the openshift console by clicking on the button\n    ![Openshift Console](./images/openshiftconsole.png)\n\n- Get the login command with token to login to the openshift from command line\n    ![Openshift Login](./images/LoginCommand.png)\n\n- Execute the login command copied in the last step in the terminal\n    ```bash\n    $ oc login --token=qvARHflZDlOYfjJZRJUEs53Yfy4F8aa6_L3ezoagQFM --server=https://c103-e.us-south.containers.cloud.ibm.com:30979\n    Logged into \"https://c103-e.us-south.containers.cloud.ibm.com:30979\" as \"IAM#email@company\" using the token provided.\n\n    You have access to 71 projects, the list has been suppressed. You can list all projects with 'oc projects'\n\n    Using project \"dev-ab\".\n    $\n    ```\n\n### Configure git\n\n- Execute the following commands\n\n  ```\n  git config --global user.email \"<email>\"\n  git config --global user.name \"<short_name>\"\n  ```\n","type":"Mdx","contentDigest":"6d051ead38947511ae45ff731d50fd4d","counter":637,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Developer tools Setup"},"exports":{},"rawBody":"---\ntitle: Developer tools Setup\n---\n\nTo prepare to use the CNCF DevOps tools you need to prepare a development client. This can be either your desktop, the IBM Cloud Shell or when using OpenShift you can use Cloud Ready Workspaces.\n\n- If you are going to use your desktop/laptop follow\n the instructions in Desktop/Laptop tab. You will require a modern MacOS or\n  Windows 10 operating systems for he Desktop/Laptop option\n- If you cannot install tools on your desktop/laptop, follow the Cloud Shell\n instructions\n- If you want to try the full web IDE experience, then follow the Code Ready\n Workspaces setup instructions\n\nOnce you have completed these setup requirements you will be ready to\n deploy you first application with a CI/CD pipeline that supports Code scanning.\n\n<Tabs>\n\n<Tab label=\"Cloud Shell\">\n\n## Config Cloud Shell\n\nIBM Cloud Shell is instantly accessible from your IBM Cloud account â€” no other installation is needed.\n\nIBM Cloud Shell is a free service from IBM which gives you complete control of your cloud resources, applications and infrastructure, from any web browser.\n\nFeatures of IBM Cloud Shell include:\n\n- Preconfigured environment\nIBM Cloud Shell provides a curated, cloud-based workspace with dozens of preinstalled tools and programming languages. It automatically authenticates to your IBM Cloud account so you can get right to work.\n\n- File upload/download\nUtilize file upload/download functionality to import files to IBM Cloud Shell, or pull down data to your local machine.\n\n- Multiple sessions\nUse up to five shell sessions at a time to maximize your productivity. Mirror workflows on your local machine, or view logs on one session while editing a file in another\n\n### Set up Cloud Shell\n- Login to IBM Cloud console (cloud.ibm.com), if not already done\n\n- Invoke Cloud shell by clicking on the button at the top right hand corner of the browser window\n    ![Invoke Cloud Shell](./images/invokecloudshell.png)\n\n- Install igc by running the following commands on the just newly opened terminal:\n    ```bash\n    git clone https://github.com/ibm-garage-cloud/cloud-shell-commands.git\n    export PATH=~/cloud-shell-commands:$PATH\n    source ./cloud-shell-commands/install-igc\n    ```\n\n- Successful execution will look like this.\n    ```bash\n    $ git clone https://github.com/ibm-garage-cloud/cloud-shell-commands.git\n    Cloning into 'cloud-shell-commands'...\n    remote: Enumerating objects: 50, done.\n    remote: Counting objects: 100% (50/50), done.\n    remote: Compressing objects: 100% (44/44), done.\n    remote: Total 50 (delta 23), reused 14 (delta 4), pack-reused 0\n        Unpacking objects: 100% (50/50), done.\n    Checking connectivity... done.\n    $ export PATH=~/cloud-shell-commands:$PATH\n    $ source ./cloud-shell-commands/install-igc\n    npm WARN deprecated request@2.88.2: request has been deprecated, see https://github.com/request/request/issues/3142\n    /home/abalasu1/.npm/bin/kubectl-dashboard -> /home/abalasu1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-dashboard.js\n    /home/abalasu1/.npm/bin/kubectl-enable -> /home/abalasu1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-enable.js\n    /home/abalasu1/.npm/bin/kubectl-credentials -> /home/abalasu1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-credentials.js\n    /home/abalasu1/.npm/bin/igc -> /home/abalasu1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script.js\n    /home/abalasu1/.npm/bin/kubectl-endpoints -> /home/abalasu1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-endpoints.js\n    /home/abalasu1/.npm/bin/kubectl-git-secret -> /home/abalasu1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-git-secret.js\n    /home/abalasu1/.npm/bin/kubectl-igc -> /home/abalasu1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script.js\n    /home/abalasu1/.npm/bin/kubectl-pipeline -> /home/abalasu1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-pipeline.js\n    /home/abalasu1/.npm/bin/kubectl-sync -> /home/abalasu1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-namespace.js\n    /home/abalasu1/.npm/bin/kubectl-tool-config -> /home/abalasu1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-tool-config.js\n\n    > jsonpath@1.0.2 postinstall /home/abalasu1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/node_modules/jsonpath\n    > node lib/aesprim.js > generated/aesprim-browser.js\n\n    npm WARN ws@7.2.5 requires a peer of bufferutil@^4.0.1 but none is installed. You must install peer dependencies yourself.\n    npm WARN ws@7.2.5 requires a peer of utf-8-validate@^5.0.2 but none is installed. You must install peer dependencies yourself.\n\n    + @ibmgaragecloud/cloud-native-toolkit-cli@0.5.3\n    added 311 packages from 358 contributors in 50.079s\n    ```\n- Check the version of the CLI commands\n    ```bash\n    $ kubectl sync --version\n    0.5.3\n    ```\n\n</Tab>\n\n<Tab label=\"Desktop/Laptop\">\n\n## Install CLIs and tools\n\nThe following is a list of desktop tools required to help with installation and development.\n\n- [Git Client](https://git-scm.com/): Needs to be installed in your development operating system, it comes as standard for Mac OS\n\n- [IBM Cloud CLI](https://cloud.ibm.com/docs/cli?topic=cloud-cli-getting-started): Required for management of IBM Cloud Account and management of your managed IBM Kubernetes and Red Hat OpenShift clusters\n    - Don't install just the [IBM Cloud CLI](https://cloud.ibm.com/docs/cli?topic=cloud-cli-install-ibmcloud-cli), install the [IBM Cloud CLI and Developer Tools](https://cloud.ibm.com/docs/cli?topic=cloud-cli-getting-started#step1-install-idt)\n    ```\n    curl -sL https://ibm.biz/idt-installer | bash\n    ```\n    - Note: If you log in to the web UI using SSO, you'll need to [create an API key](https://cloud.ibm.com/docs/iam?topic=iam-federated_id) for logging into the CLI. (You can also use this API key for [installing the Developer Tools environment](/admin/installation-ibm-cloud).)\n\n- [OpenShift OC CLI](https://www.okd.io/download.html): Required for Red Hat OpenShift management and development\n    - Place `oc` and `kubectl` in your Terminal `PATH`\n\n    - #### MacOS/Linux\n    - Once downloaded navigate to Download folder\n    ```\n    cd ~/Downloads/openshift-origin-client-tools-v3/\n    ```\n    - Then copy `oc` and `kubectl` to the system-wide available scripts folder (which is already in your PATH)\n    ```\n    cp kubectl /usr/local/bin/kubectl\n    cp oc /usr/local/bin/oc\n    ```\n\n    <InlineNotification >\n\n     Depending on your MacOS security settings you may need to allow access to `oc` and `kubectl`, go to `System Preferences`=>`Security & Privacy` and press `Allow Anyway`*\n     ![security](security.png)\n\n    </InlineNotification>\n\n- [Docker Desktop](https://www.docker.com/products/docker-desktop): Required for running common tools and [Developer Tools Image](https://ibm-garage-cloud.github.io/ibm-garage-developer-guide/guides/tools-image)\n    - Installed and running on your local machine\n\n- [Node](https://nodejs.org/en/): Required for running the [IBM Garage for Cloud CLI](https://ibm-garage-cloud.github.io/ibm-garage-developer-guide/getting-started/cli)\n    - Installed on your local machine\n    - Recommended `v12.x LTS`\n\n- [IBM Garage for Cloud CLI](https://ibm-garage-cloud.github.io/ibm-garage-developer-guide/getting-started/cli): Used to help make working with the development tools as easy as possible\n    ```\n    npm i -g @ibmgaragecloud/cloud-native-toolkit-cli\n    ```\n\n- [Tekton CLI](https://github.com/tektoncd/cli): Used to help control Tekton\n pipelines from the command line.\n    ```\n    brew tap tektoncd/tools\n    brew install tektoncd/tools/tektoncd-cli\n  ```\n\n- [Visual Studio Code](https://code.visualstudio.com/download): A popular code editor\n    - You will be required to edit some files, having a good quality editor is always best practice\n    - Enabling [launching VSCode from a terminal](https://code.visualstudio.com/docs/setup/mac#_launching-from-the-command-line)\n\n- [JDK 11](https://www.oracle.com/technetwork/java/javase/downloads/jdk11-downloads-5066655.html): _Optional_ installed on your local machine\n    - Used for SpringBoot content\n\n</Tab>\n\n<Tab label=\"Cloud Ready Workspaces\">\n\n## Code Ready Workspace\nCodeReady Workspaces is a developer workspace server and cloud IDE. Workspaces are defined as project\ncode files and all of their dependencies necessary to edit, build, run, and debug them. Each workspace\nhas its own private IDE hosted within it. The IDE is accessible through a browser. The browser downloads\nthe IDE as a single-page web application.\nCodeReady Workspaces will enable a 100% developer experience to\nbe delivered from a users browser.\n\n Red Hat CodeReady Workspaces provides:\n - Workspaces that include runtimes and IDEs\n - RESTful workspace server\n - A browser-based IDE\n - Plugins for languages, framework, and tools\n - An SDK for creating plugins and assemblies\n\n### CRW in Workshop\nCodeReady Workspaces includes a powerful in-browser IDE with support for Microsoft Visual Studio Code\nextensions. As part of the workshop, we need only a machine capable of running a web browser through\nwhich CRW will provide an integrated environment to access the code repo, and the build environment to\ndevelop the code and then  test, and deploy on an OpenShift environment\n\n### Setting up your Workspace on CRW\n\n- Login to the Openshift Cluster through the Web console, where the Code ready workspace is setup.\n\n- Access the Code Ready Workspace through the appropriate Code ready workspace URL that would have been shared.\n**Note**:If the code ready workspace is configured through openshiftoAuth, You can access the above URL, once you have logged into the Openshift Cluster\n\n- If you are accessing it for the first time you need register as the registration page will be shown. User name can contain only these characters (0-9, a-z and hypen in between).\nEnsure you provide details regarding username, Email, First name and Last name (If SSO is not configured, you need to provide the password as well.\n\n- Navigate to  the default Code Ready Workspace link  on your browser as shown in below picture.\n\n  ![CRW](./images/CRW_HomePage.png)\n\n\n- You can create the workspace by selecting one of the template stacks as shown in Step 4. Alternatively, navigate to the Workspace and click on the \"Add Workspace\" button.\n\n  ![Adding Workspace](./images/AddWorkspace.png)\n\n\n- Provide the workspace as part of the Name field. Click on \"Remove\" button in the Projects section to remove the project template.\nBasically, we are going to create an empty project.\n\n  ![Creating Project with Empty Template](./images/CreatingNewWorkspace.png)\n\n- Click on \"Create and Open\" button to create and load the workspace. Workspace will start loading. This may take a few minutes as the Container and plug-ins related to the stack has to be created and deployed.\n\n- Once the workspace is  created and loaded, you can see a vscode editor.\n\n  ![CRWWorkspace](./images/CRWScreen.png)\n\n\n- Go to \"Terminal\" menu and select \"Open Terminal in specific container\".\n\n  ![Open Terminal](./images/OpeningTerminal.png)\n\n\n- Select the \"Developer Container\".\n\n- Install igc by running the following commands on the just newly opened terminal:\n    ```bash\n    git clone https://github.com/ibm-garage-cloud/cloud-shell-commands.git\n    export PATH=~/cloud-shell-commands:$PATH\n    source ./cloud-shell-commands/install-igc\n    ```\n    Successful installation will look something like this.\n\n    ![igc install on terminal](./images/igcInstall.png)\n\n</Tab>\n\n\n</Tabs>\n\n## Log into IBM Cloud\n\n- Use `ibmcloud` CLI command line to log into the cloud account. Replace the user_id, password and team name in the sandbox name\n    ```bash\n    ibmcloud login -u <user_id> -p <password> -g sandbox-team-n.. -r us-south\n    ```\n\n- Select Account Number that you are boarded on.\n    ```bash\n    $ ibmcloud login -u email@company.com -p XXX -g sandbox-team-one -r us-south\n    API endpoint: https://cloud.ibm.com\n    Authenticating...\n    OK\n\n    Select an account:\n    1. GSI Labs - IBM\n    Enter a number> 1\n    Targeted account GSI Labs\n\n    Targeted resource group sandbox-team-one\n\n    Targeted region us-south\n\n    API endpoint:      https://cloud.ibm.com\n    Region:            us-south\n    User:              email@company.com\n    Account:           GSI Labs\n    Resource group:    sandbox-team-one\n    CF API endpoint:\n    Org:\n    Space:\n\n    ```\n\n## Log into OpenShift Cluster\n\n- Log into the openshift cluster from the cloud console\n    ![Openshift](./images/openshiftcluster.png)\n\n- Access the openshift console by clicking on the button\n    ![Openshift Console](./images/openshiftconsole.png)\n\n- Get the login command with token to login to the openshift from command line\n    ![Openshift Login](./images/LoginCommand.png)\n\n- Execute the login command copied in the last step in the terminal\n    ```bash\n    $ oc login --token=qvARHflZDlOYfjJZRJUEs53Yfy4F8aa6_L3ezoagQFM --server=https://c103-e.us-south.containers.cloud.ibm.com:30979\n    Logged into \"https://c103-e.us-south.containers.cloud.ibm.com:30979\" as \"IAM#email@company\" using the token provided.\n\n    You have access to 71 projects, the list has been suppressed. You can list all projects with 'oc projects'\n\n    Using project \"dev-ab\".\n    $\n    ```\n\n### Configure git\n\n- Execute the following commands\n\n  ```\n  git config --global user.email \"<email>\"\n  git config --global user.name \"<short_name>\"\n  ```\n","fileAbsolutePath":"/Users/johandry/Workspace/ibm/att-cloudnative/ibmcloud-pattern-guide/src/pages/ci-cd/cloud-native-setup-tools/index.mdx"}}}}