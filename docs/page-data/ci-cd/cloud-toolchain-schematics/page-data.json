{"componentChunkName":"component---src-pages-ci-cd-cloud-toolchain-schematics-index-mdx","path":"/ci-cd/cloud-toolchain-schematics/","result":{"pageContext":{"frontmatter":{"title":"IBM Cloud Toolchain- Managed Devops for Schematics/Terraform","description":"IBM Cloud Toolchain: Managed Devops for Schematics/Terraform","keywords":"ibm cloud cicd"},"relativePagePath":"/ci-cd/cloud-toolchain-schematics/index.mdx","titleType":"page","MdxNode":{"id":"c3961bbb-1c15-50a7-be5e-9da0604b3d4b","children":[],"parent":"d8fa4798-9991-556f-b384-4f0fe41cb108","internal":{"content":"---\ntitle: IBM Cloud Toolchain- Managed Devops for Schematics/Terraform\ndescription: \"IBM Cloud Toolchain: Managed Devops for Schematics/Terraform\"\nkeywords: 'ibm cloud cicd'\n---\n\n<PageDescription>\n\nIBM Cloud Toolchain: Managed Devops for Schematics/Terraform\n\n</PageDescription>\n\n<AnchorLinks small>\n  <AnchorLink>Fork Terraform Scripts</AnchorLink>\n  <AnchorLink>Create Schematics Workspace</AnchorLink>\n  <AnchorLink>Enable Continuous Delivery for Schematics</AnchorLink>\n  <AnchorLink>Triggering a Change</AnchorLink>\n</AnchorLinks>\n\n## Fork Terraform Scripts\n\n- Fork a copy of `https://github.com/jzaccone/iac-pattern-guide/` to your own github account. You will edit this code later to trigger a kickoff of the CD pipeline\n\n## Create Schematics Workspace\n\n- From the upper lefthand menu, go to **Schematics**\n\n![Schematics Menu](../../../images/cicd-schematics-menu.png)\n\n- On the Workspaces page, click **Create workspace**\n\n![Schematics Menu](../../../images/cicd-schematics-workspaces.png)\n\n-  Fill out values for **Workspace name**, **Resource group**, and **Location**. Then click **Create**\n\n![Schematics Menu](../../../images/cicd-schematics-createworkspace2.png)\n\n- Once you create your schematics workspace, you will be redirected to the settings page. \nScroll down to the **Import your Terraform Template** section.\n- Provide the fork you created earlier for the **Github or Gitlab repository URL**.\n- Select **terraform_v0.12** for **Terraform version**\n- Click **Save template information**\n\n![Schematics Import](../../../images/cicd-schematics-import.png)\n\nOnce the page refreshes, you should see a **Variables** section. You will need to provide values for each of these.\n- For **environment**, put any value\n- For **public_key**, copy and paste a ssh public key that you will use to access your VSIs. For mac:\n```bash\nssh-keygen -t rsa # If you need a new key\ncat ~/.ssh/id_rsa.pub # Copy and paste this value\n```\n- Select **Sensitive** box next to the **public_key** field to treat that data as Sensitive\n- Leave **port** blank to keep the default 8080 port\n- Set any value for **project_name**\n- Click **Save changes**\n\n\n![Schematics Variables](../../../images/cicd-schematics-variables2.png)\n\nTo test your Schematics workspace, click on the **Apply Plan** button \n\n\n![Schematics Apply](../../../images/cicd-schematics-apply.png)\n\nYou should see an update to your workspace **Activity** page with a new entry for **Applying plan**\n\n![Schematics Activity](../../../images/cicd-schematics-activity.png)\n\nClick **View log** to see the progress. Once the plan has been successfully applied, find the **entrypoint** to the hello world application this terraform deploys.\n\n![Schematics Logs](../../../images/cicd-schematics-logs.png)\n\n![Schematics helloworld](../../../images/cicd-schematics-helloworld.png)\n\n## Enable Continuous Delivery for Schematics\n\nNext we will enable **GitOps** for our schematics/terraform by enabling Continuous delivery for our workspace. \nGitOps is a practice that uses git source repository as the declarative source of truth for the state of our applications. \nMeaning that if change something in the code and commit it, a terraform apply will be triggered, and our application state will be updated.\n\n- To enable continious delivery for our Schematics workspace, from the workspace page, go to **Settings**\n\n![Schematics Settings](../../../images/cicd-schematics-settings.png)\n\n- Scroll down to **Details** and click the link that says **Enable continuous delivery**\n\n![Schematics Enable CD](../../../images/cicd-schematics-enablecd.png)\n\n- Name your toolchain, and accept the default values for everything in the **GitHub** section\n- Under **Delivery Pipeline**, add the **IBM Cloud API Key** you created before, or click **New** to generate a new one.\n- Click **Create**\n\n![Schematics API Key](../../../images/cicd-schematics-apikey.png)\n\nVoila! You have a pipeline for your Schematics project. Click on **Delivery Pipeline** to see the different stages created for your project.\n\n![Schematics Pipeline](../../../images/cicd-schematics-pipeline.png) \n\n - Once finished, click on the **Apply Plan** stage to find the logs and entrypoint to the application just as before.\n\n\n## Triggering a Change\nNow we will change our source code to trigger a pipeline execution. \n\n<InlineNotification>\nThese steps assume that you have followed the fork steps above, or have write permission to your repository. \n</InlineNotification>\n\n- Find your source control repo and navigate to `02-schematics/main.tf`\n- Edit \"Hello World\" text to say something different. Like \"Hello beautiful world\"\n- Commit the change\n\n![Schematics Change Source](../../../images/cicd-schematics-changesource.png) \n\n- Navigate back to your pipeline to see your changes taking place. You should be able to see your commit under **Last Input** in the **Update** stage.\n\n![Schematics Change Source](../../../images/cicd-schematics-pipelineafter.png)  \n\n- Once the **Apply** stage has finished, refresh the page for your app to see the deployed changes\n\n![Schematics App After](../../../images/cicd-schematics-appafter2.png)  \n\n","type":"Mdx","contentDigest":"0c97e980e77d1fd41218d6d76895c501","counter":635,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"IBM Cloud Toolchain- Managed Devops for Schematics/Terraform","description":"IBM Cloud Toolchain: Managed Devops for Schematics/Terraform","keywords":"ibm cloud cicd"},"exports":{},"rawBody":"---\ntitle: IBM Cloud Toolchain- Managed Devops for Schematics/Terraform\ndescription: \"IBM Cloud Toolchain: Managed Devops for Schematics/Terraform\"\nkeywords: 'ibm cloud cicd'\n---\n\n<PageDescription>\n\nIBM Cloud Toolchain: Managed Devops for Schematics/Terraform\n\n</PageDescription>\n\n<AnchorLinks small>\n  <AnchorLink>Fork Terraform Scripts</AnchorLink>\n  <AnchorLink>Create Schematics Workspace</AnchorLink>\n  <AnchorLink>Enable Continuous Delivery for Schematics</AnchorLink>\n  <AnchorLink>Triggering a Change</AnchorLink>\n</AnchorLinks>\n\n## Fork Terraform Scripts\n\n- Fork a copy of `https://github.com/jzaccone/iac-pattern-guide/` to your own github account. You will edit this code later to trigger a kickoff of the CD pipeline\n\n## Create Schematics Workspace\n\n- From the upper lefthand menu, go to **Schematics**\n\n![Schematics Menu](../../../images/cicd-schematics-menu.png)\n\n- On the Workspaces page, click **Create workspace**\n\n![Schematics Menu](../../../images/cicd-schematics-workspaces.png)\n\n-  Fill out values for **Workspace name**, **Resource group**, and **Location**. Then click **Create**\n\n![Schematics Menu](../../../images/cicd-schematics-createworkspace2.png)\n\n- Once you create your schematics workspace, you will be redirected to the settings page. \nScroll down to the **Import your Terraform Template** section.\n- Provide the fork you created earlier for the **Github or Gitlab repository URL**.\n- Select **terraform_v0.12** for **Terraform version**\n- Click **Save template information**\n\n![Schematics Import](../../../images/cicd-schematics-import.png)\n\nOnce the page refreshes, you should see a **Variables** section. You will need to provide values for each of these.\n- For **environment**, put any value\n- For **public_key**, copy and paste a ssh public key that you will use to access your VSIs. For mac:\n```bash\nssh-keygen -t rsa # If you need a new key\ncat ~/.ssh/id_rsa.pub # Copy and paste this value\n```\n- Select **Sensitive** box next to the **public_key** field to treat that data as Sensitive\n- Leave **port** blank to keep the default 8080 port\n- Set any value for **project_name**\n- Click **Save changes**\n\n\n![Schematics Variables](../../../images/cicd-schematics-variables2.png)\n\nTo test your Schematics workspace, click on the **Apply Plan** button \n\n\n![Schematics Apply](../../../images/cicd-schematics-apply.png)\n\nYou should see an update to your workspace **Activity** page with a new entry for **Applying plan**\n\n![Schematics Activity](../../../images/cicd-schematics-activity.png)\n\nClick **View log** to see the progress. Once the plan has been successfully applied, find the **entrypoint** to the hello world application this terraform deploys.\n\n![Schematics Logs](../../../images/cicd-schematics-logs.png)\n\n![Schematics helloworld](../../../images/cicd-schematics-helloworld.png)\n\n## Enable Continuous Delivery for Schematics\n\nNext we will enable **GitOps** for our schematics/terraform by enabling Continuous delivery for our workspace. \nGitOps is a practice that uses git source repository as the declarative source of truth for the state of our applications. \nMeaning that if change something in the code and commit it, a terraform apply will be triggered, and our application state will be updated.\n\n- To enable continious delivery for our Schematics workspace, from the workspace page, go to **Settings**\n\n![Schematics Settings](../../../images/cicd-schematics-settings.png)\n\n- Scroll down to **Details** and click the link that says **Enable continuous delivery**\n\n![Schematics Enable CD](../../../images/cicd-schematics-enablecd.png)\n\n- Name your toolchain, and accept the default values for everything in the **GitHub** section\n- Under **Delivery Pipeline**, add the **IBM Cloud API Key** you created before, or click **New** to generate a new one.\n- Click **Create**\n\n![Schematics API Key](../../../images/cicd-schematics-apikey.png)\n\nVoila! You have a pipeline for your Schematics project. Click on **Delivery Pipeline** to see the different stages created for your project.\n\n![Schematics Pipeline](../../../images/cicd-schematics-pipeline.png) \n\n - Once finished, click on the **Apply Plan** stage to find the logs and entrypoint to the application just as before.\n\n\n## Triggering a Change\nNow we will change our source code to trigger a pipeline execution. \n\n<InlineNotification>\nThese steps assume that you have followed the fork steps above, or have write permission to your repository. \n</InlineNotification>\n\n- Find your source control repo and navigate to `02-schematics/main.tf`\n- Edit \"Hello World\" text to say something different. Like \"Hello beautiful world\"\n- Commit the change\n\n![Schematics Change Source](../../../images/cicd-schematics-changesource.png) \n\n- Navigate back to your pipeline to see your changes taking place. You should be able to see your commit under **Last Input** in the **Update** stage.\n\n![Schematics Change Source](../../../images/cicd-schematics-pipelineafter.png)  \n\n- Once the **Apply** stage has finished, refresh the page for your app to see the deployed changes\n\n![Schematics App After](../../../images/cicd-schematics-appafter2.png)  \n\n","fileAbsolutePath":"/Users/johandry/Workspace/ibm/att-cloudnative/ibmcloud-pattern-guide/src/pages/ci-cd/cloud-toolchain-schematics/index.mdx"}}}}