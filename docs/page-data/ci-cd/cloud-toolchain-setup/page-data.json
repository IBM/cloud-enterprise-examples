{"componentChunkName":"component---src-pages-ci-cd-cloud-toolchain-setup-index-mdx","path":"/ci-cd/cloud-toolchain-setup/","result":{"pageContext":{"frontmatter":{"title":"Cloud Toolchain Setup","description":"Setting up pipelines using IBN Cloud Toolchain","keywords":"ibm cloud"},"relativePagePath":"/ci-cd/cloud-toolchain-setup/index.mdx","titleType":"page","MdxNode":{"id":"353414f6-772d-587e-8f9d-8125c809cbd2","children":[],"parent":"07138f15-2f1e-541b-8a32-6ab3ae6d4153","internal":{"content":"---\ntitle: Cloud Toolchain Setup\ndescription: Setting up pipelines using IBN Cloud Toolchain\nkeywords: 'ibm cloud'\n---\n\n<PageDescription>\n\nIBM Cloud Toolchain Setup\n\n</PageDescription>\n\n<AnchorLinks small>\n  <AnchorLink>Create Kubernetes Deployment Target</AnchorLink>\n  <AnchorLink>Setup Image Registry</AnchorLink> \n  <AnchorLink>Create the Toolchain</AnchorLink>\n  <AnchorLink>Results</AnchorLink>\n</AnchorLinks>\n\n\n## Create Kubernetes Deployment Target\n\nFor this pattern, we will create an instance of the IBM Cloud Kubernetes Service (IKS) on VPC Gen 2. \nThe following will work similar to Red Hat OpenShift Kubernetes Service (ROKS), as well as any Kubernetes service outside of IBM Cloud that you may have access to.\n\n- From the IBM Cloud console, select **Kubernetes** from the top left navigation menu in IBM Cloud\n\n![K8s hamburger menu](../../../images/cicd-k8s-hamburger.png)\n\n- Click **Create Cluster** \n\n![k8s create cluster](../../../images/cicd-create-cluster.png)\n\n- Select Kubernetes version **Latest** which is required for VPC Gen 2\n\n![k8s select version](../../../images/cicd-select-k8s-version.png)\n\n- Select VPC Gen 2 Infrastructure (Assumes VPC Gen 2 has already been created) \n\n![k8s select vpc](../../../images/cicd-select-vpc.png)\n\n- Scroll down and complete and select other options such as type and number of nodes and hit **Create**. \nWait a few minutes for your cluster to finish provisioning before proceeding to the next step.\n\n## Setup Image Registry\n\n- Add a Namespace to the registry on IBM Cloud\n```bash\n$ ibmcloud cr namespace-add attworkshoptest\nAdding namespace 'attworkshoptest'...\n\nSuccessfully added namespace 'attworkshoptest'\n\nOK\n```\n\n- Upgrade the plan, if needed, to unlock unlimited storage for the registry.\n\n<InlineNotification>\nThe registry will be need to be a \"Standard\" plan to increase registry storage limits past the 5MB \n</InlineNotification>\n\n```bash\n$ ibmcloud cr plan-upgrade\n\nYou agree to the terms and conditions of the 'Standard' pricing plan when you upgrade: https://www.ibm.com/software/sla/sladb.nsf/sla/bm-7670-03\nYou cannot undo this operation.\nDo you want to continue to upgrade your pricing plan? [y/N]> y\nSetting pricing plan: 'Standard'...\n\nOK\n```\n\n\n## Create the Toolchain\n\n- From the IBM Cloud console, select **Devops** from the top left navigation menu in IBM Cloud\n\n![Devops hamburger menu](../../../images/cicd-devops-hamburger-noshadow.png) \n\n- Click the **Create toolchain** button\n\n![Devops create toolchain](../../../images/cicd-devops-create-toolchain.png) \n\n- Select the **Develop a Kubernetes app** tile as your template. \n\n<InlineNotification>\nThis \"Develop a Kubernetes app\" tile is a template which provides the fastest way to setup a CI/CD pipeline to K8s. All individual parts of the template can be modified later.\n</InlineNotification>\n\n![Devops create toolchain](../../../images/cicd-develop-k8s-toolchain.png) \n\n- Define the **Toolchain Name**, **Region** and **Resource Group** for the toolchain. \n\n\n<InlineNotification>\nThe resource group defines the group for access control that is explained in detail in the IAM section. \nYou will want to select the appropriate resource group, such as \"development\" or \"production\" to control access to the toolchain.\n</InlineNotification>\n\n- For **Source Provider**, select **Git Repos and Issue Tracking** which will create a git repo space using the IBM Cloud gitlab environment\n\n![Devops name toolchain](../../../images/cicd-toolchain-title.png)\n\n- Next, configure the git repo. Select **US East** for the **Server**, select **Clone** as the **Repository Type**  and\nuse `https://github.com/jzaccone/java-liberty-app` for the **Source repository URL**. \n\n\n<InlineNotification>\nThis will clone a sample liberty application from GitHub and push it to our GitLab environment hosted on IBM Cloud. \nYou can also link directly to GitHub or any git repo you can access\n</InlineNotification>\n\n![Devops Git configuration](../../../images/cicd-git-config4.png)  \n\nConfigure the Delivery Pipeline:\n- Select from the dropdowns to find the container registry namespace you created earlier by selecting the appropriate **Container registry region** and **Container registry namespace**.\n- Click the blue button to generate a **IBM Cloud API Key** based on your current logged in user.\n- Use the dropdowns again to find your clustser by selecting the correct **Cluster region**, **Resource Group**, and **Cluster name**.\n- Write in **default** for **Cluster namespace**.\n\n<InlineNotification>\nThe blue button will create a new API key that allows anyone who has it the ability to do anything you could do. \nTo make things more secure, you will want to create a service ID API key that can be created for a singular purpose and would provide limited access to only what your pipeline requires.\n</InlineNotification>\n\n![Devops delivery pipeline](../../../images/cicd-delivery-pipeline.png)  \n\n- Select **Create** to create your Toolchain\n\n<InlineNotification>\n\nA toolchain brings together many resources. A git repo, the Docker Registry, a Kubernetes Cluster and the toolchain itself.\n\nEverything created in this example was done using a single IAM role. In the \"Cross-Account\" section, \nwe will examine breaking down those roles and accounts in order to isolate the production environment.\n\n</InlineNotification>\n\n### Results\n\nOne you create the Toolchain, you should see the following screen\n\n![Devops pipeline overview](../../../images/cicd-toolchain-overview.png)  \n\nUsing the **Deploy to Kubernetes** template, we configure a few things to the toolchain out of the box.\n\n- **Git** which links to a the GitLab environment hosted on IBM Cloud and protected by IAM for your accounts\n- **Eclipse Orion Web IDE** which is a web IDE allowing you to browse and make quick edits to your code\n- **Issues** which links to the Issues page in your source control repository\n- **Delivery Pipeline** which includes all the stages and jobs for building, testing and deploying your application. \nThe pipeline should have been triggered to run automatically when you created the pipeline\n\nYou can add a new tool to your tool chain by pressing the **Add Tool** button. \nOptions for tools include integrations with Artifactory, Nexus, SonarQube, Slack or you can create a custom integration with any tool\n\n![Devops pipeline add tool](../../../images/cicd-toolchain-addtool.png)   \n\nSelect the **Delivery Pipeline** tile to check the progress of your pipeline execution. Once it completes, you should see that all stages pass successfully.\n\n\n![Devops pipeline success](../../../images/cicd-toolchain-success.png) \n\nYou might notice that the **Containerize** stage passed with warnings. That is because vulnerabilities were found from the IBM Cloud Vurnerability Advisor. \nYou can click through to see logs to see details of what vulnerabilities were discovered.\n\n\n<InlineNotification>\n\nThe IBM Cloud Vurnerability Advisor scans images uploaded to the IBM Cloud Registry automatically.\nFor development it is OK to allow the images to go through and be deployed to a development environment, \nbut for production, you will want to configure this stage to stop on failure unless an exception has been explicitly made for that vurnerability.\nFor a detailed view on vurnerabilities for all images in the registry go to Kubernetes->Registry.\n\n</InlineNotification>\n\nClick the **Deploy to Kubernetes** job in the **Deploy** stage. This should take you to the logs output for that job.\n\n![Devops pipeline logs](../../../images/cicd-toolchain-logs.png) \n\nNear the bottom of the logs you should see a print of the address for your application.  \n\n![Devops pipeline app link](../../../images/cicd-toolchain-applocation.png) \n\nClick on the link to see your application running on the Kubernetes Cluster on IBM Cloud\n\n![Devops pipeline app](../../../images/cicd-toolchain-app.png)  \n\n\n<InlineNotification>\n\nSince this cluster is running on VPC Gen 2, this may not work depending on how how you configure incoming traffic into the private cloud. \nSee the appropriate sections in this guide for setting up and configuring VPC Gen 2. \nYou can also verify the app is running by running `kubectl get pods` when connected to the IKS cluster.\n\n</InlineNotification>\n","type":"Mdx","contentDigest":"d38df79d793b2feba0f3fb289f2287e8","counter":630,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Cloud Toolchain Setup","description":"Setting up pipelines using IBN Cloud Toolchain","keywords":"ibm cloud"},"exports":{},"rawBody":"---\ntitle: Cloud Toolchain Setup\ndescription: Setting up pipelines using IBN Cloud Toolchain\nkeywords: 'ibm cloud'\n---\n\n<PageDescription>\n\nIBM Cloud Toolchain Setup\n\n</PageDescription>\n\n<AnchorLinks small>\n  <AnchorLink>Create Kubernetes Deployment Target</AnchorLink>\n  <AnchorLink>Setup Image Registry</AnchorLink> \n  <AnchorLink>Create the Toolchain</AnchorLink>\n  <AnchorLink>Results</AnchorLink>\n</AnchorLinks>\n\n\n## Create Kubernetes Deployment Target\n\nFor this pattern, we will create an instance of the IBM Cloud Kubernetes Service (IKS) on VPC Gen 2. \nThe following will work similar to Red Hat OpenShift Kubernetes Service (ROKS), as well as any Kubernetes service outside of IBM Cloud that you may have access to.\n\n- From the IBM Cloud console, select **Kubernetes** from the top left navigation menu in IBM Cloud\n\n![K8s hamburger menu](../../../images/cicd-k8s-hamburger.png)\n\n- Click **Create Cluster** \n\n![k8s create cluster](../../../images/cicd-create-cluster.png)\n\n- Select Kubernetes version **Latest** which is required for VPC Gen 2\n\n![k8s select version](../../../images/cicd-select-k8s-version.png)\n\n- Select VPC Gen 2 Infrastructure (Assumes VPC Gen 2 has already been created) \n\n![k8s select vpc](../../../images/cicd-select-vpc.png)\n\n- Scroll down and complete and select other options such as type and number of nodes and hit **Create**. \nWait a few minutes for your cluster to finish provisioning before proceeding to the next step.\n\n## Setup Image Registry\n\n- Add a Namespace to the registry on IBM Cloud\n```bash\n$ ibmcloud cr namespace-add attworkshoptest\nAdding namespace 'attworkshoptest'...\n\nSuccessfully added namespace 'attworkshoptest'\n\nOK\n```\n\n- Upgrade the plan, if needed, to unlock unlimited storage for the registry.\n\n<InlineNotification>\nThe registry will be need to be a \"Standard\" plan to increase registry storage limits past the 5MB \n</InlineNotification>\n\n```bash\n$ ibmcloud cr plan-upgrade\n\nYou agree to the terms and conditions of the 'Standard' pricing plan when you upgrade: https://www.ibm.com/software/sla/sladb.nsf/sla/bm-7670-03\nYou cannot undo this operation.\nDo you want to continue to upgrade your pricing plan? [y/N]> y\nSetting pricing plan: 'Standard'...\n\nOK\n```\n\n\n## Create the Toolchain\n\n- From the IBM Cloud console, select **Devops** from the top left navigation menu in IBM Cloud\n\n![Devops hamburger menu](../../../images/cicd-devops-hamburger-noshadow.png) \n\n- Click the **Create toolchain** button\n\n![Devops create toolchain](../../../images/cicd-devops-create-toolchain.png) \n\n- Select the **Develop a Kubernetes app** tile as your template. \n\n<InlineNotification>\nThis \"Develop a Kubernetes app\" tile is a template which provides the fastest way to setup a CI/CD pipeline to K8s. All individual parts of the template can be modified later.\n</InlineNotification>\n\n![Devops create toolchain](../../../images/cicd-develop-k8s-toolchain.png) \n\n- Define the **Toolchain Name**, **Region** and **Resource Group** for the toolchain. \n\n\n<InlineNotification>\nThe resource group defines the group for access control that is explained in detail in the IAM section. \nYou will want to select the appropriate resource group, such as \"development\" or \"production\" to control access to the toolchain.\n</InlineNotification>\n\n- For **Source Provider**, select **Git Repos and Issue Tracking** which will create a git repo space using the IBM Cloud gitlab environment\n\n![Devops name toolchain](../../../images/cicd-toolchain-title.png)\n\n- Next, configure the git repo. Select **US East** for the **Server**, select **Clone** as the **Repository Type**  and\nuse `https://github.com/jzaccone/java-liberty-app` for the **Source repository URL**. \n\n\n<InlineNotification>\nThis will clone a sample liberty application from GitHub and push it to our GitLab environment hosted on IBM Cloud. \nYou can also link directly to GitHub or any git repo you can access\n</InlineNotification>\n\n![Devops Git configuration](../../../images/cicd-git-config4.png)  \n\nConfigure the Delivery Pipeline:\n- Select from the dropdowns to find the container registry namespace you created earlier by selecting the appropriate **Container registry region** and **Container registry namespace**.\n- Click the blue button to generate a **IBM Cloud API Key** based on your current logged in user.\n- Use the dropdowns again to find your clustser by selecting the correct **Cluster region**, **Resource Group**, and **Cluster name**.\n- Write in **default** for **Cluster namespace**.\n\n<InlineNotification>\nThe blue button will create a new API key that allows anyone who has it the ability to do anything you could do. \nTo make things more secure, you will want to create a service ID API key that can be created for a singular purpose and would provide limited access to only what your pipeline requires.\n</InlineNotification>\n\n![Devops delivery pipeline](../../../images/cicd-delivery-pipeline.png)  \n\n- Select **Create** to create your Toolchain\n\n<InlineNotification>\n\nA toolchain brings together many resources. A git repo, the Docker Registry, a Kubernetes Cluster and the toolchain itself.\n\nEverything created in this example was done using a single IAM role. In the \"Cross-Account\" section, \nwe will examine breaking down those roles and accounts in order to isolate the production environment.\n\n</InlineNotification>\n\n### Results\n\nOne you create the Toolchain, you should see the following screen\n\n![Devops pipeline overview](../../../images/cicd-toolchain-overview.png)  \n\nUsing the **Deploy to Kubernetes** template, we configure a few things to the toolchain out of the box.\n\n- **Git** which links to a the GitLab environment hosted on IBM Cloud and protected by IAM for your accounts\n- **Eclipse Orion Web IDE** which is a web IDE allowing you to browse and make quick edits to your code\n- **Issues** which links to the Issues page in your source control repository\n- **Delivery Pipeline** which includes all the stages and jobs for building, testing and deploying your application. \nThe pipeline should have been triggered to run automatically when you created the pipeline\n\nYou can add a new tool to your tool chain by pressing the **Add Tool** button. \nOptions for tools include integrations with Artifactory, Nexus, SonarQube, Slack or you can create a custom integration with any tool\n\n![Devops pipeline add tool](../../../images/cicd-toolchain-addtool.png)   \n\nSelect the **Delivery Pipeline** tile to check the progress of your pipeline execution. Once it completes, you should see that all stages pass successfully.\n\n\n![Devops pipeline success](../../../images/cicd-toolchain-success.png) \n\nYou might notice that the **Containerize** stage passed with warnings. That is because vulnerabilities were found from the IBM Cloud Vurnerability Advisor. \nYou can click through to see logs to see details of what vulnerabilities were discovered.\n\n\n<InlineNotification>\n\nThe IBM Cloud Vurnerability Advisor scans images uploaded to the IBM Cloud Registry automatically.\nFor development it is OK to allow the images to go through and be deployed to a development environment, \nbut for production, you will want to configure this stage to stop on failure unless an exception has been explicitly made for that vurnerability.\nFor a detailed view on vurnerabilities for all images in the registry go to Kubernetes->Registry.\n\n</InlineNotification>\n\nClick the **Deploy to Kubernetes** job in the **Deploy** stage. This should take you to the logs output for that job.\n\n![Devops pipeline logs](../../../images/cicd-toolchain-logs.png) \n\nNear the bottom of the logs you should see a print of the address for your application.  \n\n![Devops pipeline app link](../../../images/cicd-toolchain-applocation.png) \n\nClick on the link to see your application running on the Kubernetes Cluster on IBM Cloud\n\n![Devops pipeline app](../../../images/cicd-toolchain-app.png)  \n\n\n<InlineNotification>\n\nSince this cluster is running on VPC Gen 2, this may not work depending on how how you configure incoming traffic into the private cloud. \nSee the appropriate sections in this guide for setting up and configuring VPC Gen 2. \nYou can also verify the app is running by running `kubectl get pods` when connected to the IKS cluster.\n\n</InlineNotification>\n","fileAbsolutePath":"/Users/johandry/Workspace/ibm/att-cloudnative/ibmcloud-pattern-guide/src/pages/ci-cd/cloud-toolchain-setup/index.mdx"}}}}