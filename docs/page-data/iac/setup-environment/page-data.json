{"componentChunkName":"component---src-pages-iac-setup-environment-index-mdx","path":"/iac/setup-environment/","result":{"pageContext":{"frontmatter":{"title":"Setup Terraform Environment for IBM Cloud","description":"Instructions to setup your environment to use Terraform for IBM Cloud","keywords":"terraform,ibm cloud,setup,provider"},"relativePagePath":"/iac/setup-environment/index.mdx","titleType":"page","MdxNode":{"id":"56d8492a-f439-5e28-8c50-4047573ebb73","children":[],"parent":"97f27471-2b4a-501d-a78a-ab90d826c8ba","internal":{"content":"---\ntitle: Setup Terraform Environment for IBM Cloud\ndescription: Instructions to setup your environment to use Terraform for IBM Cloud\nkeywords: 'terraform,ibm cloud,setup,provider'\n---\n\n<PageDescription>\n\nInstructions to setup your environment to use Terraform for IBM Cloud\n\n</PageDescription>\n\nThe first step before you start working with Infrastructure as Code or Terraform is to setup your environment. We will install terraform, then set it up for IBM Cloud and make sure it works with IBM Cloud.\n\n<AnchorLinks small>\n  <AnchorLink>Install IBM Cloud CLI</AnchorLink>\n  <AnchorLink>Install Terraform</AnchorLink>\n  <AnchorLink>Configure access to IBM Cloud</AnchorLink>\n  <AnchorLink>Testing access to IBM Cloud</AnchorLink>\n</AnchorLinks>\n\n<InlineNotification>\n\n###### Requirements\n\nTo be able to execute and complete the instructions in this page, make sure you have an **IBM Cloud account**: if you don't have one yet, you can [create a Lite account](https://cloud.ibm.com/docs/overview?topic=overview-quickstart_lite#prereqs-lite) for free.\n\n</InlineNotification>\n\n## Install IBM Cloud CLI\n\nIf you already have installed and setup the IBM Cloud CLI you may skip this section and go straight to install infrastructure [IBM Cloud CLI Plugins](#ibm-cloud-cli-plugins).\n\nIn this pattern you will see `ibmcloud` CLI in most of the examples and instructions. This table provides simplified instructions to install `ibmcloud` CLI on different platforms, for more details, see the [cli installation instructions](https://cloud.ibm.com/docs/cli?topic=cloud-cli-install-ibmcloud-cli).\n\n<Tabs>\n<Tab label=\"Linux\">\n\nThe following one-liner script works on Linux to install the latest version of `ibmcloud`:\n\n```bash\ncurl -fsSL https://clis.cloud.ibm.com/install/linux | sh\n```\n\nOr, you can download the latest version of the Installer for Linux from the [IBM Cloud CLI Releases](https://github.com/IBM-Cloud/ibm-cloud-cli-release/releases/) page, extract the package and run the `install` script.\n\n</Tab>\n\n<Tab label=\"Mac OS X\">\n\nIf you have [brew](https://brew.sh) installed, you can install terraform executing the following command.\n\n```bash\nbrew cask install ibm-cloud-cli\n```\n\nThen add one of the following lines to `~/.zshrc` or `~/.bashrc` respectively (more about autocomplete [here](https://cloud.ibm.com/docs/cli?topic=cloud-cli-shell-autocomplete)):\n\n```bash\nsource /usr/local/ibmcloud/autocomplete/zsh_autocomplete\nsource /usr/local/ibmcloud/autocomplete/bash_autocomplete\n```\n\nIf `brew` is not installed then execute the following command:\n\n```bash\ncurl -fsSL https://clis.cloud.ibm.com/install/osx | sh\n```\n\nOr, download the latest version of the Installer for Mac OS X from the [IBM Cloud CLI Releases](https://github.com/IBM-Cloud/ibm-cloud-cli-release/releases/) page, execute it and follow the instructions.\n\n</Tab>\n\n<Tab label=\"Windows\">\n\nDownload the latest version of the Installer for Windows from the [IBM Cloud CLI Releases](https://github.com/IBM-Cloud/ibm-cloud-cli-release/releases/) page, execute it and follow the instructions.\n\nOr, if you prefer to install with PowerShell, execute the following command:\n\n```powershell\niex(New-Object Net.WebClient).DownloadString('https://clis.cloud.ibm.com/install/powershell')\n```\n\n</Tab>\n</Tabs>\n\nVerify `ibmcloud` was correctly installed by executing: `ibmcloud version`, you should see something like this:\n\n```bash\n$ ibmcloud version\nibmcloud version 1.0.0+908f90a-2020-03-30T10:19:41+00:00\n```\n\n### IBM Cloud CLI Plugins\n\nThe next steps is to install all the required plugins, for Infrastructure as Code you'll need the `vpc-infrastructure` (aka `infrastructure-service`) and the `schematics` plugins, to install them execute the following command:\n\n```bash\nibmcloud plugin install -f -r \"IBM Cloud\" infrastructure-service\nibmcloud plugin install -f -r \"IBM Cloud\" schematics\n```\n\nTo list all the available plugins use the command:\n\n```bash\nibmcloud plugin repo-plugins\n```\n\nWhen a plugin version is out-of-date, you will see a reminder the first time you use that plugin in a cli session. To update plugins, you can use the following command to list available updates and select the ones to install:\n\n```bash\nibmcloud plugin update\n```\n\n### Login to IBM Cloud\n\nLog in to IBM Cloud with the `login` sub-command. You may need to use the parameter `-r` to select a region (i.e. `us-south` or `eu-gb`), `-g` to select a resource group (i.e. `Default`), `-c` to select an account ID and `--sso` to request a one-time password if your IBMid is federated with another identity provider. When not using `--sso`, the command will interactively prompt for user name and password. Although these can be specified with the `-u` or `-p` parameters, for security reasons, it's not recommended to do so.\n\n```bash\nibmcloud login -r us-south -g Default --sso\n```\n\nYou don't have to select the region or the resource group at login, these can be set at any time in the cli. After login (with or without resource group), to list all the available resource groups use the `resource groups` sub-command then use the `target` sub-command to select it.\n\n```bash\nibmcloud resource groups\nibmcloud target -g RESOURCE_GROUP_NAME\n```\n\nThe `target` sub-command can be used also to select a new account ID or region.\n\n<InlineNotification>\n\n###### `ibmcloud` cheatsheet\n\nTo know more about the IBM Cloud CLI download this [quick reference](https://github.com/ibm-cloud-docs/cli/raw/master/IBM%20Cloud%20CLI%20quick%20reference.pdf) sheet. Also check the [IBM Cloud CLI documentation](https://cloud.ibm.com/docs/cli?topic=cloud-cli-getting-started).\n\n</InlineNotification>\n\n## Install Terraform\n\n[Terraform](http://terraform.io/) is Open Source software developed by [HashiCorp](https://www.hashicorp.com/) to describe infrastructure as a code. Terraform allows you to build, change, and do versioning of the infrastructure safely and efficiently on multiple platforms and clouds. You can use Terraform to automate your IBM Cloud resource provisioning, rapidly build complex, multi-tier cloud environments, and implement Infrastructure as Code (IaC).\n\nTerraform is distributed as a single binary for different platforms and architectures. To install Terraform follow the instructions below to install it from Terraform downloads or from the command prompt from your platform.\n\n<Tabs>\n<Tab label=\"Manual installation\">\n\nDownload the latest version for your operative system from the [Download Terraform](https://www.terraform.io/downloads.html) page, then unzip it and move it to a directory included in your system's PATH environment variable.\n</Tab>\n<Tab label=\"Linux\">\n\nThe following one-liner script works on Linux and Mac OS X to install Terraform **v0.12.24** for **amd64** architecture.\n\nUpdate the version number to the latest one and move the downloaded `terraform` binary to one of the directories listed in the `$PATH` environment variable.\n\n```bash\ncurl -SL \"https://releases.hashicorp.com/terraform/0.12.24/terraform_0.12.24_$(uname | tr '[:upper:]' '[:lower:]')_amd64.zip\" | \\\ntar -xf - && \\\nchmod +x terraform\n```\n\n</Tab>\n\n<Tab label=\"Mac OS X\">\n\nIf you have [brew](https://brew.sh) installed, you can install terraform executing the following command.\n\n```bash\nbrew install terraform\n```\n\nIf not, you can follow the same instructions for Linux.\n\n</Tab>\n\n<Tab label=\"Windows\">\n\nIf you have [Chocolatey](https://chocolatey.org/) installed, you can install terraform executing the following command.\n\n```bash\nchoco install terraform\n```\n\nIf not, download from the Terraform downloads page and install manually.\n\n</Tab>\n</Tabs>\n\nVerify terraform is correctly installed by executing: `terraform version`, you should see something like this:\n\n```bash\n$ terraform version\nTerraform v0.12.24\n```\n\n## Configure access to IBM Cloud\n\nWith Terraform you can create, manage and update almost any infrastructure resource such as virtual servers, virtual routers, load balancers, containers, kubernetes clusters, and more. All these infrastructure components are represented as a **resource** in Terraform. All these resources are defined in a **Terraform provider** which is responsible to interact and expose the resources using the cloud service API.\n\n<InlineNotification>\n\n###### Where can I find an overview of available resources?\n\nTo find a full list of IBM Cloud resources that you can provision with the IBM Cloud Provider plug-in, see the [IBM Cloud Provider reference](https://cloud.ibm.com/docs/terraform?topic=terraform-index-of-terraform-resources-and-data-sources).\n\n</InlineNotification>\n\nIn order for Terraform to interact with IBM Cloud, it requires the IBM Cloud Provider. To install the IBM Cloud Provider just download the binary to the directory `~/.terraform.d/plugins`. Download the latest version from [https://github.com/IBM-Cloud/terraform-provider-ibm/releases](https://github.com/IBM-Cloud/terraform-provider-ibm/releases), or execute the following simple script on Linux or Mac OS X, make sure to update the version number (i.e. `v1.3.0`) to the latest one.\n\n```bash\nmkdir -p ~/.terraform.d/plugins\ncurl -SL \"https://github.com/IBM-Cloud/terraform-provider-ibm/releases/download/v1.3.0/$(uname | tr '[:upper:]' '[:lower:]')_amd64.zip\" | \\\ntar -xf - -C ~/.terraform.d/plugins\nchmod +x ~/.terraform.d/plugins/terraform-provider-ibm_*\n```\n\nNow we need to setup the IBM Cloud credentials on the system to let the IBM Cloud provider to talk the IBM Cloud REST API.\n\n<InlineNotification>\n\n###### What credentials do I need?\n\nThe credentials that you need depend on the type of resource that you want to provision. For example, to provision classic infrastructure resources, you must provide your IBM Cloud classic infrastructure user name and API key. To provision VPC infrastructure generation 2, you need an IBM Cloud API key. For more information about what credentials you need for a specific IBM Cloud resource, see [Retrieving required credentials for your resources](https://github.com/IBM-Cloud/terraform-provider-ibm/releases).\n\nIn this documentation we are going to use Gen 2 resources so we'll only work with the IBM Cloud API key.\n\n</InlineNotification>\n\n<InlineNotification>\n\n###### Using Classic Infrastructure?\n\nTo use the Classic Infrastructure or the VPC Infrastructure Gen 1 you'll need to include in the credentials the IAAS Classic username and API key. These can be obtained at the IBM Cloud web console. Go to **Manage** > **Access (IAM)** > **Users**, find and click on your user. Under the section **API keys** you'll find your key(s) or generate them clicking on `Create classic infrastructure key` button. The **username** is the email address you use to login to the IBM Cloud console.\n\nWhen you have the IAAS Classic username and API key, export them with the environment variables `IAAS_CLASSIC_USERNAME` and `IAAS_CLASSIC_API_KEY` respectively.\n\n</InlineNotification>\n\nIf you haven't logged in yet, follow the steps from [login](#login-to-ibm-cloud) to IBM Cloud or just execute `ibmcloud login` and target a resource group.\n\n```bash\nibmcloud login --sso\nibmcloud resource groups\nibmcloud target -g RESOURCE_GROUP_NAME\n```\n\nCreate an API Key on the IBM Cloud web console following these [instructions](https://cloud.ibm.com/docs/iam?topic=iam-userapikey#create_user_key) or simply using the `ibmcloud` command, like this:\n\n```bash\nibmcloud iam api-key-create TerraformKey -d \"API Key for Terraform\" --file terraform_key.json\n```\n\nIf you are in a GitHub repository directory, make sure the file is not pushed or ignore it adding the filename to `.gitignore`, executing:\n\n```bash\necho \"terraform_key.json\" >> .gitignore\n```\n\nTo give Terraform and the IBM Cloud provider access to the IBM Cloud credentials, store the API key as the environment variable `IC_API_KEY`.\n\n```bash\nexport IC_API_KEY=$(grep '\"apikey\":' terraform_key.json | sed 's/.*: \"\\(.*\\)\".*/\\1/')\n```\n\nOr by using jq:\n\n```bash\nexport IC_API_KEY=$(jq -r .apikey terraform_key.json)\n```\n\n<InlineNotification kind=\"warning\">\n\n###### Important\n\nThe IBM Cloud credentials can also be set in Terraform input variables.\n\nThere are different ways to set Terraform input variables, for security reasons we recommend to use environment variables (`TF_VAR_<variable name>`) but you can also store them in a variable definition (`.tfvar`) files or pass them with the `-var` command line option.\n\nIf you store the credentials in a variable definition file, i.e. `terraform.tfvar` make sure to not push the file to your github repository. Add the filename into the `.gitignore` file.\n\nThe same applies for the Key file previously created, so make sure it is also in the `.gitignore` file.\n\n</InlineNotification>\n\n## Testing access to IBM Cloud\n\nThe Terraform code can be done with JSON format or using **HashiCorp Configuration Language** (HCL). During this pattern guide we'll use only HCL and we will call it HCL or Terraform Code.\n\nA simple terraform code to verify your access could be something like the following:\n\n```hcl\nprovider \"ibm\" {\n  generation         = 2\n  region             = \"us-south\"\n}\n\ndata \"ibm_iam_access_group\" \"accgroup\" {\n}\n\noutput \"accgroups\" {\n  value = data.ibm_iam_access_group.accgroup.groups[*].name\n}\n```\n\nCreate a file `main.tf` with the above terraform code in a temporary directory, then execute:\n\n```bash\nterraform init\nterraform apply\n```\n\nThe output of `terraform apply` should print any Access Groups that are visible to you in the account associated with your API key. The output should be similar to the execution of:\n\n```bash\nibmcloud iam access-groups\n```\n\nIn the following section we'll see more examples.\n","type":"Mdx","contentDigest":"c77381342810560c67659a73bcf489db","counter":591,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Setup Terraform Environment for IBM Cloud","description":"Instructions to setup your environment to use Terraform for IBM Cloud","keywords":"terraform,ibm cloud,setup,provider"},"exports":{},"rawBody":"---\ntitle: Setup Terraform Environment for IBM Cloud\ndescription: Instructions to setup your environment to use Terraform for IBM Cloud\nkeywords: 'terraform,ibm cloud,setup,provider'\n---\n\n<PageDescription>\n\nInstructions to setup your environment to use Terraform for IBM Cloud\n\n</PageDescription>\n\nThe first step before you start working with Infrastructure as Code or Terraform is to setup your environment. We will install terraform, then set it up for IBM Cloud and make sure it works with IBM Cloud.\n\n<AnchorLinks small>\n  <AnchorLink>Install IBM Cloud CLI</AnchorLink>\n  <AnchorLink>Install Terraform</AnchorLink>\n  <AnchorLink>Configure access to IBM Cloud</AnchorLink>\n  <AnchorLink>Testing access to IBM Cloud</AnchorLink>\n</AnchorLinks>\n\n<InlineNotification>\n\n###### Requirements\n\nTo be able to execute and complete the instructions in this page, make sure you have an **IBM Cloud account**: if you don't have one yet, you can [create a Lite account](https://cloud.ibm.com/docs/overview?topic=overview-quickstart_lite#prereqs-lite) for free.\n\n</InlineNotification>\n\n## Install IBM Cloud CLI\n\nIf you already have installed and setup the IBM Cloud CLI you may skip this section and go straight to install infrastructure [IBM Cloud CLI Plugins](#ibm-cloud-cli-plugins).\n\nIn this pattern you will see `ibmcloud` CLI in most of the examples and instructions. This table provides simplified instructions to install `ibmcloud` CLI on different platforms, for more details, see the [cli installation instructions](https://cloud.ibm.com/docs/cli?topic=cloud-cli-install-ibmcloud-cli).\n\n<Tabs>\n<Tab label=\"Linux\">\n\nThe following one-liner script works on Linux to install the latest version of `ibmcloud`:\n\n```bash\ncurl -fsSL https://clis.cloud.ibm.com/install/linux | sh\n```\n\nOr, you can download the latest version of the Installer for Linux from the [IBM Cloud CLI Releases](https://github.com/IBM-Cloud/ibm-cloud-cli-release/releases/) page, extract the package and run the `install` script.\n\n</Tab>\n\n<Tab label=\"Mac OS X\">\n\nIf you have [brew](https://brew.sh) installed, you can install terraform executing the following command.\n\n```bash\nbrew cask install ibm-cloud-cli\n```\n\nThen add one of the following lines to `~/.zshrc` or `~/.bashrc` respectively (more about autocomplete [here](https://cloud.ibm.com/docs/cli?topic=cloud-cli-shell-autocomplete)):\n\n```bash\nsource /usr/local/ibmcloud/autocomplete/zsh_autocomplete\nsource /usr/local/ibmcloud/autocomplete/bash_autocomplete\n```\n\nIf `brew` is not installed then execute the following command:\n\n```bash\ncurl -fsSL https://clis.cloud.ibm.com/install/osx | sh\n```\n\nOr, download the latest version of the Installer for Mac OS X from the [IBM Cloud CLI Releases](https://github.com/IBM-Cloud/ibm-cloud-cli-release/releases/) page, execute it and follow the instructions.\n\n</Tab>\n\n<Tab label=\"Windows\">\n\nDownload the latest version of the Installer for Windows from the [IBM Cloud CLI Releases](https://github.com/IBM-Cloud/ibm-cloud-cli-release/releases/) page, execute it and follow the instructions.\n\nOr, if you prefer to install with PowerShell, execute the following command:\n\n```powershell\niex(New-Object Net.WebClient).DownloadString('https://clis.cloud.ibm.com/install/powershell')\n```\n\n</Tab>\n</Tabs>\n\nVerify `ibmcloud` was correctly installed by executing: `ibmcloud version`, you should see something like this:\n\n```bash\n$ ibmcloud version\nibmcloud version 1.0.0+908f90a-2020-03-30T10:19:41+00:00\n```\n\n### IBM Cloud CLI Plugins\n\nThe next steps is to install all the required plugins, for Infrastructure as Code you'll need the `vpc-infrastructure` (aka `infrastructure-service`) and the `schematics` plugins, to install them execute the following command:\n\n```bash\nibmcloud plugin install -f -r \"IBM Cloud\" infrastructure-service\nibmcloud plugin install -f -r \"IBM Cloud\" schematics\n```\n\nTo list all the available plugins use the command:\n\n```bash\nibmcloud plugin repo-plugins\n```\n\nWhen a plugin version is out-of-date, you will see a reminder the first time you use that plugin in a cli session. To update plugins, you can use the following command to list available updates and select the ones to install:\n\n```bash\nibmcloud plugin update\n```\n\n### Login to IBM Cloud\n\nLog in to IBM Cloud with the `login` sub-command. You may need to use the parameter `-r` to select a region (i.e. `us-south` or `eu-gb`), `-g` to select a resource group (i.e. `Default`), `-c` to select an account ID and `--sso` to request a one-time password if your IBMid is federated with another identity provider. When not using `--sso`, the command will interactively prompt for user name and password. Although these can be specified with the `-u` or `-p` parameters, for security reasons, it's not recommended to do so.\n\n```bash\nibmcloud login -r us-south -g Default --sso\n```\n\nYou don't have to select the region or the resource group at login, these can be set at any time in the cli. After login (with or without resource group), to list all the available resource groups use the `resource groups` sub-command then use the `target` sub-command to select it.\n\n```bash\nibmcloud resource groups\nibmcloud target -g RESOURCE_GROUP_NAME\n```\n\nThe `target` sub-command can be used also to select a new account ID or region.\n\n<InlineNotification>\n\n###### `ibmcloud` cheatsheet\n\nTo know more about the IBM Cloud CLI download this [quick reference](https://github.com/ibm-cloud-docs/cli/raw/master/IBM%20Cloud%20CLI%20quick%20reference.pdf) sheet. Also check the [IBM Cloud CLI documentation](https://cloud.ibm.com/docs/cli?topic=cloud-cli-getting-started).\n\n</InlineNotification>\n\n## Install Terraform\n\n[Terraform](http://terraform.io/) is Open Source software developed by [HashiCorp](https://www.hashicorp.com/) to describe infrastructure as a code. Terraform allows you to build, change, and do versioning of the infrastructure safely and efficiently on multiple platforms and clouds. You can use Terraform to automate your IBM Cloud resource provisioning, rapidly build complex, multi-tier cloud environments, and implement Infrastructure as Code (IaC).\n\nTerraform is distributed as a single binary for different platforms and architectures. To install Terraform follow the instructions below to install it from Terraform downloads or from the command prompt from your platform.\n\n<Tabs>\n<Tab label=\"Manual installation\">\n\nDownload the latest version for your operative system from the [Download Terraform](https://www.terraform.io/downloads.html) page, then unzip it and move it to a directory included in your system's PATH environment variable.\n</Tab>\n<Tab label=\"Linux\">\n\nThe following one-liner script works on Linux and Mac OS X to install Terraform **v0.12.24** for **amd64** architecture.\n\nUpdate the version number to the latest one and move the downloaded `terraform` binary to one of the directories listed in the `$PATH` environment variable.\n\n```bash\ncurl -SL \"https://releases.hashicorp.com/terraform/0.12.24/terraform_0.12.24_$(uname | tr '[:upper:]' '[:lower:]')_amd64.zip\" | \\\ntar -xf - && \\\nchmod +x terraform\n```\n\n</Tab>\n\n<Tab label=\"Mac OS X\">\n\nIf you have [brew](https://brew.sh) installed, you can install terraform executing the following command.\n\n```bash\nbrew install terraform\n```\n\nIf not, you can follow the same instructions for Linux.\n\n</Tab>\n\n<Tab label=\"Windows\">\n\nIf you have [Chocolatey](https://chocolatey.org/) installed, you can install terraform executing the following command.\n\n```bash\nchoco install terraform\n```\n\nIf not, download from the Terraform downloads page and install manually.\n\n</Tab>\n</Tabs>\n\nVerify terraform is correctly installed by executing: `terraform version`, you should see something like this:\n\n```bash\n$ terraform version\nTerraform v0.12.24\n```\n\n## Configure access to IBM Cloud\n\nWith Terraform you can create, manage and update almost any infrastructure resource such as virtual servers, virtual routers, load balancers, containers, kubernetes clusters, and more. All these infrastructure components are represented as a **resource** in Terraform. All these resources are defined in a **Terraform provider** which is responsible to interact and expose the resources using the cloud service API.\n\n<InlineNotification>\n\n###### Where can I find an overview of available resources?\n\nTo find a full list of IBM Cloud resources that you can provision with the IBM Cloud Provider plug-in, see the [IBM Cloud Provider reference](https://cloud.ibm.com/docs/terraform?topic=terraform-index-of-terraform-resources-and-data-sources).\n\n</InlineNotification>\n\nIn order for Terraform to interact with IBM Cloud, it requires the IBM Cloud Provider. To install the IBM Cloud Provider just download the binary to the directory `~/.terraform.d/plugins`. Download the latest version from [https://github.com/IBM-Cloud/terraform-provider-ibm/releases](https://github.com/IBM-Cloud/terraform-provider-ibm/releases), or execute the following simple script on Linux or Mac OS X, make sure to update the version number (i.e. `v1.3.0`) to the latest one.\n\n```bash\nmkdir -p ~/.terraform.d/plugins\ncurl -SL \"https://github.com/IBM-Cloud/terraform-provider-ibm/releases/download/v1.3.0/$(uname | tr '[:upper:]' '[:lower:]')_amd64.zip\" | \\\ntar -xf - -C ~/.terraform.d/plugins\nchmod +x ~/.terraform.d/plugins/terraform-provider-ibm_*\n```\n\nNow we need to setup the IBM Cloud credentials on the system to let the IBM Cloud provider to talk the IBM Cloud REST API.\n\n<InlineNotification>\n\n###### What credentials do I need?\n\nThe credentials that you need depend on the type of resource that you want to provision. For example, to provision classic infrastructure resources, you must provide your IBM Cloud classic infrastructure user name and API key. To provision VPC infrastructure generation 2, you need an IBM Cloud API key. For more information about what credentials you need for a specific IBM Cloud resource, see [Retrieving required credentials for your resources](https://github.com/IBM-Cloud/terraform-provider-ibm/releases).\n\nIn this documentation we are going to use Gen 2 resources so we'll only work with the IBM Cloud API key.\n\n</InlineNotification>\n\n<InlineNotification>\n\n###### Using Classic Infrastructure?\n\nTo use the Classic Infrastructure or the VPC Infrastructure Gen 1 you'll need to include in the credentials the IAAS Classic username and API key. These can be obtained at the IBM Cloud web console. Go to **Manage** > **Access (IAM)** > **Users**, find and click on your user. Under the section **API keys** you'll find your key(s) or generate them clicking on `Create classic infrastructure key` button. The **username** is the email address you use to login to the IBM Cloud console.\n\nWhen you have the IAAS Classic username and API key, export them with the environment variables `IAAS_CLASSIC_USERNAME` and `IAAS_CLASSIC_API_KEY` respectively.\n\n</InlineNotification>\n\nIf you haven't logged in yet, follow the steps from [login](#login-to-ibm-cloud) to IBM Cloud or just execute `ibmcloud login` and target a resource group.\n\n```bash\nibmcloud login --sso\nibmcloud resource groups\nibmcloud target -g RESOURCE_GROUP_NAME\n```\n\nCreate an API Key on the IBM Cloud web console following these [instructions](https://cloud.ibm.com/docs/iam?topic=iam-userapikey#create_user_key) or simply using the `ibmcloud` command, like this:\n\n```bash\nibmcloud iam api-key-create TerraformKey -d \"API Key for Terraform\" --file terraform_key.json\n```\n\nIf you are in a GitHub repository directory, make sure the file is not pushed or ignore it adding the filename to `.gitignore`, executing:\n\n```bash\necho \"terraform_key.json\" >> .gitignore\n```\n\nTo give Terraform and the IBM Cloud provider access to the IBM Cloud credentials, store the API key as the environment variable `IC_API_KEY`.\n\n```bash\nexport IC_API_KEY=$(grep '\"apikey\":' terraform_key.json | sed 's/.*: \"\\(.*\\)\".*/\\1/')\n```\n\nOr by using jq:\n\n```bash\nexport IC_API_KEY=$(jq -r .apikey terraform_key.json)\n```\n\n<InlineNotification kind=\"warning\">\n\n###### Important\n\nThe IBM Cloud credentials can also be set in Terraform input variables.\n\nThere are different ways to set Terraform input variables, for security reasons we recommend to use environment variables (`TF_VAR_<variable name>`) but you can also store them in a variable definition (`.tfvar`) files or pass them with the `-var` command line option.\n\nIf you store the credentials in a variable definition file, i.e. `terraform.tfvar` make sure to not push the file to your github repository. Add the filename into the `.gitignore` file.\n\nThe same applies for the Key file previously created, so make sure it is also in the `.gitignore` file.\n\n</InlineNotification>\n\n## Testing access to IBM Cloud\n\nThe Terraform code can be done with JSON format or using **HashiCorp Configuration Language** (HCL). During this pattern guide we'll use only HCL and we will call it HCL or Terraform Code.\n\nA simple terraform code to verify your access could be something like the following:\n\n```hcl\nprovider \"ibm\" {\n  generation         = 2\n  region             = \"us-south\"\n}\n\ndata \"ibm_iam_access_group\" \"accgroup\" {\n}\n\noutput \"accgroups\" {\n  value = data.ibm_iam_access_group.accgroup.groups[*].name\n}\n```\n\nCreate a file `main.tf` with the above terraform code in a temporary directory, then execute:\n\n```bash\nterraform init\nterraform apply\n```\n\nThe output of `terraform apply` should print any Access Groups that are visible to you in the account associated with your API key. The output should be similar to the execution of:\n\n```bash\nibmcloud iam access-groups\n```\n\nIn the following section we'll see more examples.\n","fileAbsolutePath":"/Users/johandry/Workspace/ibm/att-cloudnative/ibmcloud-pattern-guide/src/pages/iac/setup-environment/index.mdx"}}}}